{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// chessboard.js v@VERSION\n// https://github.com/oakmac/chessboardjs/\n//\n// Copyright (c) 2019, Chris Oakman\n// Released under the MIT license\n// https://github.com/oakmac/chessboardjs/blob/master/LICENSE.md\n\n// start anonymous scope\nconsole.log(12312);\n(function () {\n  'use strict';\n\n  var $ = window['jQuery'];\n\n  // ---------------------------------------------------------------------------\n  // Constants\n  // ---------------------------------------------------------------------------\n\n  var COLUMNS = 'abcdefgh'.split('');\n  var DEFAULT_DRAG_THROTTLE_RATE = 20;\n  var ELLIPSIS = 'â€¦';\n  var MINIMUM_JQUERY_VERSION = '1.8.3';\n  var RUN_ASSERTS = true;\n  var START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\n  var START_POSITION = fenToObj(START_FEN);\n\n  // default animation speeds\n  var DEFAULT_APPEAR_SPEED = 200;\n  var DEFAULT_MOVE_SPEED = 200;\n  var DEFAULT_SNAPBACK_SPEED = 60;\n  var DEFAULT_SNAP_SPEED = 30;\n  var DEFAULT_TRASH_SPEED = 100;\n\n  // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n  var CSS = {};\n  CSS['alpha'] = 'alpha-d2270';\n  CSS['black'] = 'black-3c85d';\n  CSS['board'] = 'board-b72b1';\n  CSS['chessboard'] = 'chessboard-63f37';\n  CSS['clearfix'] = 'clearfix-7da63';\n  CSS['highlight1'] = 'highlight1-32417';\n  CSS['highlight2'] = 'highlight2-9c5d2';\n  CSS['notation'] = 'notation-322f9';\n  CSS['numeric'] = 'numeric-fc462';\n  CSS['piece'] = 'piece-417db';\n  CSS['row'] = 'row-5277c';\n  CSS['sparePieces'] = 'spare-pieces-7492f';\n  CSS['sparePiecesBottom'] = 'spare-pieces-bottom-ae20f';\n  CSS['sparePiecesTop'] = 'spare-pieces-top-4028b';\n  CSS['square'] = 'square-55d63';\n  CSS['white'] = 'white-1e1d7';\n\n  // ---------------------------------------------------------------------------\n  // Misc Util Functions\n  // ---------------------------------------------------------------------------\n\n  function throttle(f, interval, scope) {\n    var timeout = 0;\n    var shouldFire = false;\n    var args = [];\n    var handleTimeout = function () {\n      timeout = 0;\n      if (shouldFire) {\n        shouldFire = false;\n        fire();\n      }\n    };\n    var fire = function () {\n      timeout = window.setTimeout(handleTimeout, interval);\n      f.apply(scope, args);\n    };\n    return function (_args) {\n      args = arguments;\n      if (!timeout) {\n        fire();\n      } else {\n        shouldFire = true;\n      }\n    };\n  }\n\n  // function debounce (f, interval, scope) {\n  //   var timeout = 0\n  //   return function (_args) {\n  //     window.clearTimeout(timeout)\n  //     var args = arguments\n  //     timeout = window.setTimeout(function () {\n  //       f.apply(scope, args)\n  //     }, interval)\n  //   }\n  // }\n\n  function uuid() {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = Math.random() * 16 | 0;\n      return r.toString(16);\n    });\n  }\n  function deepCopy(thing) {\n    return JSON.parse(JSON.stringify(thing));\n  }\n  function parseSemVer(version) {\n    var tmp = version.split('.');\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    };\n  }\n\n  // returns true if version is >= minimum\n  function validSemanticVersion(version, minimum) {\n    version = parseSemVer(version);\n    minimum = parseSemVer(minimum);\n    var versionNum = version.major * 100000 * 100000 + version.minor * 100000 + version.patch;\n    var minimumNum = minimum.major * 100000 * 100000 + minimum.minor * 100000 + minimum.patch;\n    return versionNum >= minimumNum;\n  }\n  function interpolateTemplate(str, obj) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) continue;\n      var keyTemplateStr = '{' + key + '}';\n      var value = obj[key];\n      while (str.indexOf(keyTemplateStr) !== -1) {\n        str = str.replace(keyTemplateStr, value);\n      }\n    }\n    return str;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(interpolateTemplate('abc', {\n      a: 'x'\n    }) === 'abc');\n    console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc');\n    console.assert(interpolateTemplate('{a}bc', {\n      p: 'q'\n    }) === '{a}bc');\n    console.assert(interpolateTemplate('{a}bc', {\n      a: 'x'\n    }) === 'xbc');\n    console.assert(interpolateTemplate('{a}bc{a}bc', {\n      a: 'x'\n    }) === 'xbcxbc');\n    console.assert(interpolateTemplate('{a}{a}{b}', {\n      a: 'x',\n      b: 'y'\n    }) === 'xxy');\n  }\n\n  // ---------------------------------------------------------------------------\n  // Predicates\n  // ---------------------------------------------------------------------------\n\n  function isString(s) {\n    return typeof s === 'string';\n  }\n  function isFunction(f) {\n    return typeof f === 'function';\n  }\n  function isInteger(n) {\n    return typeof n === 'number' && isFinite(n) && Math.floor(n) === n;\n  }\n  function validAnimationSpeed(speed) {\n    if (speed === 'fast' || speed === 'slow') return true;\n    if (!isInteger(speed)) return false;\n    return speed >= 0;\n  }\n  function validThrottleRate(rate) {\n    return isInteger(rate) && rate >= 1;\n  }\n  function validMove(move) {\n    // move should be a string\n    if (!isString(move)) return false;\n\n    // move should be in the form of \"e2-e4\", \"f6-d5\"\n    var squares = move.split('-');\n    if (squares.length !== 2) return false;\n    return validSquare(squares[0]) && validSquare(squares[1]);\n  }\n  function validSquare(square) {\n    return isString(square) && square.search(/^[a-h][1-8]$/) !== -1;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(validSquare('a1'));\n    console.assert(validSquare('e2'));\n    console.assert(!validSquare('D2'));\n    console.assert(!validSquare('g9'));\n    console.assert(!validSquare('a'));\n    console.assert(!validSquare(true));\n    console.assert(!validSquare(null));\n    console.assert(!validSquare({}));\n  }\n  function validPieceCode(code) {\n    return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(validPieceCode('bP'));\n    console.assert(validPieceCode('bK'));\n    console.assert(validPieceCode('wK'));\n    console.assert(validPieceCode('wR'));\n    console.assert(!validPieceCode('WR'));\n    console.assert(!validPieceCode('Wr'));\n    console.assert(!validPieceCode('a'));\n    console.assert(!validPieceCode(true));\n    console.assert(!validPieceCode(null));\n    console.assert(!validPieceCode({}));\n  }\n  function validFen(fen) {\n    if (!isString(fen)) return false;\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '');\n\n    // expand the empty square numbers to just 1s\n    fen = expandFenEmptySquares(fen);\n\n    // FEN should be 8 sections separated by slashes\n    var chunks = fen.split('/');\n    if (chunks.length !== 8) return false;\n\n    // check each section\n    for (var i = 0; i < 8; i++) {\n      if (chunks[i].length !== 8 || chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(validFen(START_FEN));\n    console.assert(validFen('8/8/8/8/8/8/8/8'));\n    console.assert(validFen('r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R'));\n    console.assert(validFen('3r3r/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'));\n    console.assert(!validFen('3r3z/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'));\n    console.assert(!validFen('anbqkbnr/8/8/8/8/8/PPPPPPPP/8'));\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/'));\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBN'));\n    console.assert(!validFen('888888/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'));\n    console.assert(!validFen('888888/pppppppp/74/8/8/8/PPPPPPPP/RNBQKBNR'));\n    console.assert(!validFen({}));\n  }\n  function validPositionObject(pos) {\n    if (!$.isPlainObject(pos)) return false;\n    for (var i in pos) {\n      if (!pos.hasOwnProperty(i)) continue;\n      if (!validSquare(i) || !validPieceCode(pos[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(validPositionObject(START_POSITION));\n    console.assert(validPositionObject({}));\n    console.assert(validPositionObject({\n      e2: 'wP'\n    }));\n    console.assert(validPositionObject({\n      e2: 'wP',\n      d2: 'wP'\n    }));\n    console.assert(!validPositionObject({\n      e2: 'BP'\n    }));\n    console.assert(!validPositionObject({\n      y2: 'wP'\n    }));\n    console.assert(!validPositionObject(null));\n    console.assert(!validPositionObject('start'));\n    console.assert(!validPositionObject(START_FEN));\n  }\n  function isTouchDevice() {\n    return 'ontouchstart' in document.documentElement;\n  }\n  function validJQueryVersion() {\n    return typeof window.$ && $.fn && $.fn.jquery && validSemanticVersion($.fn.jquery, MINIMUM_JQUERY_VERSION);\n  }\n\n  // ---------------------------------------------------------------------------\n  // Chess Util Functions\n  // ---------------------------------------------------------------------------\n\n  // convert FEN piece code to bP, wK, etc\n  function fenToPieceCode(piece) {\n    // black piece\n    if (piece.toLowerCase() === piece) {\n      return 'b' + piece.toUpperCase();\n    }\n\n    // white piece\n    return 'w' + piece.toUpperCase();\n  }\n\n  // convert bP, wK, etc code to FEN structure\n  function pieceCodeToFen(piece) {\n    var pieceCodeLetters = piece.split('');\n\n    // white piece\n    if (pieceCodeLetters[0] === 'w') {\n      return pieceCodeLetters[1].toUpperCase();\n    }\n\n    // black piece\n    return pieceCodeLetters[1].toLowerCase();\n  }\n\n  // convert FEN string to position object\n  // returns false if the FEN string is invalid\n  function fenToObj(fen) {\n    if (!validFen(fen)) return false;\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '');\n    var rows = fen.split('/');\n    var position = {};\n    var currentRow = 8;\n    for (var i = 0; i < 8; i++) {\n      var row = rows[i].split('');\n      var colIdx = 0;\n\n      // loop through each character in the FEN section\n      for (var j = 0; j < row.length; j++) {\n        // number / empty squares\n        if (row[j].search(/[1-8]/) !== -1) {\n          var numEmptySquares = parseInt(row[j], 10);\n          colIdx = colIdx + numEmptySquares;\n        } else {\n          // piece\n          var square = COLUMNS[colIdx] + currentRow;\n          position[square] = fenToPieceCode(row[j]);\n          colIdx = colIdx + 1;\n        }\n      }\n      currentRow = currentRow - 1;\n    }\n    return position;\n  }\n\n  // position object to FEN string\n  // returns false if the obj is not a valid position object\n  function objToFen(obj) {\n    if (!validPositionObject(obj)) return false;\n    var fen = '';\n    var currentRow = 8;\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var square = COLUMNS[j] + currentRow;\n\n        // piece exists\n        if (obj.hasOwnProperty(square)) {\n          fen = fen + pieceCodeToFen(obj[square]);\n        } else {\n          // empty space\n          fen = fen + '1';\n        }\n      }\n      if (i !== 7) {\n        fen = fen + '/';\n      }\n      currentRow = currentRow - 1;\n    }\n\n    // squeeze the empty numbers together\n    fen = squeezeFenEmptySquares(fen);\n    return fen;\n  }\n  if (RUN_ASSERTS) {\n    console.assert(objToFen(START_POSITION) === START_FEN);\n    console.assert(objToFen({}) === '8/8/8/8/8/8/8/8');\n    console.assert(objToFen({\n      a2: 'wP',\n      'b2': 'bP'\n    }) === '8/8/8/8/8/8/Pp6/8');\n  }\n  function squeezeFenEmptySquares(fen) {\n    return fen.replace(/11111111/g, '8').replace(/1111111/g, '7').replace(/111111/g, '6').replace(/11111/g, '5').replace(/1111/g, '4').replace(/111/g, '3').replace(/11/g, '2');\n  }\n  function expandFenEmptySquares(fen) {\n    return fen.replace(/8/g, '11111111').replace(/7/g, '1111111').replace(/6/g, '111111').replace(/5/g, '11111').replace(/4/g, '1111').replace(/3/g, '111').replace(/2/g, '11');\n  }\n\n  // returns the distance between two squares\n  function squareDistance(squareA, squareB) {\n    var squareAArray = squareA.split('');\n    var squareAx = COLUMNS.indexOf(squareAArray[0]) + 1;\n    var squareAy = parseInt(squareAArray[1], 10);\n    var squareBArray = squareB.split('');\n    var squareBx = COLUMNS.indexOf(squareBArray[0]) + 1;\n    var squareBy = parseInt(squareBArray[1], 10);\n    var xDelta = Math.abs(squareAx - squareBx);\n    var yDelta = Math.abs(squareAy - squareBy);\n    if (xDelta >= yDelta) return xDelta;\n    return yDelta;\n  }\n\n  // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n  function findClosestPiece(position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square);\n\n    // search through the position in order of distance for the piece\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i];\n      if (position.hasOwnProperty(s) && position[s] === piece) {\n        return s;\n      }\n    }\n    return false;\n  }\n\n  // returns an array of closest squares from square\n  function createRadius(square) {\n    var squares = [];\n\n    // calculate distance of all squares\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1);\n\n        // skip the square we're starting from\n        if (square === s) continue;\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        });\n      }\n    }\n\n    // sort by distance\n    squares.sort(function (a, b) {\n      return a.distance - b.distance;\n    });\n\n    // just return the square code\n    var surroundingSquares = [];\n    for (i = 0; i < squares.length; i++) {\n      surroundingSquares.push(squares[i].square);\n    }\n    return surroundingSquares;\n  }\n\n  // given a position and a set of moves, return a new position\n  // with the moves executed\n  function calculatePositionFromMoves(position, moves) {\n    var newPosition = deepCopy(position);\n    for (var i in moves) {\n      if (!moves.hasOwnProperty(i)) continue;\n\n      // skip the move if the position doesn't have a piece on the source square\n      if (!newPosition.hasOwnProperty(i)) continue;\n      var piece = newPosition[i];\n      delete newPosition[i];\n      newPosition[moves[i]] = piece;\n    }\n    return newPosition;\n  }\n\n  // TODO: add some asserts here for calculatePositionFromMoves\n\n  // ---------------------------------------------------------------------------\n  // HTML\n  // ---------------------------------------------------------------------------\n\n  function buildContainerHTML(hasSparePieces) {\n    var html = '<div class=\"{chessboard}\">';\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesTop}\"></div>';\n    }\n    html += '<div class=\"{board}\"></div>';\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesBottom}\"></div>';\n    }\n    html += '</div>';\n    return interpolateTemplate(html, CSS);\n  }\n\n  // ---------------------------------------------------------------------------\n  // Config\n  // ---------------------------------------------------------------------------\n\n  function expandConfigArgumentShorthand(config) {\n    if (config === 'start') {\n      config = {\n        position: deepCopy(START_POSITION)\n      };\n    } else if (validFen(config)) {\n      config = {\n        position: fenToObj(config)\n      };\n    } else if (validPositionObject(config)) {\n      config = {\n        position: deepCopy(config)\n      };\n    }\n\n    // config must be an object\n    if (!$.isPlainObject(config)) config = {};\n    return config;\n  }\n\n  // validate config / set default options\n  function expandConfig(config) {\n    // default for orientation is white\n    if (config.orientation !== 'black') config.orientation = 'white';\n\n    // default for showNotation is true\n    if (config.showNotation !== false) config.showNotation = true;\n\n    // default for draggable is false\n    if (config.draggable !== true) config.draggable = false;\n\n    // default for dropOffBoard is 'snapback'\n    if (config.dropOffBoard !== 'trash') config.dropOffBoard = 'snapback';\n\n    // default for sparePieces is false\n    if (config.sparePieces !== true) config.sparePieces = false;\n\n    // draggable must be true if sparePieces is enabled\n    if (config.sparePieces) config.draggable = true;\n\n    // default piece theme is wikipedia\n    if (!config.hasOwnProperty('pieceTheme') || !isString(config.pieceTheme) && !isFunction(config.pieceTheme)) {\n      config.pieceTheme = 'static/img/chesspieces/wikipedia/{piece}.png';\n    }\n\n    // animation speeds\n    if (!validAnimationSpeed(config.appearSpeed)) config.appearSpeed = DEFAULT_APPEAR_SPEED;\n    if (!validAnimationSpeed(config.moveSpeed)) config.moveSpeed = DEFAULT_MOVE_SPEED;\n    if (!validAnimationSpeed(config.snapbackSpeed)) config.snapbackSpeed = DEFAULT_SNAPBACK_SPEED;\n    if (!validAnimationSpeed(config.snapSpeed)) config.snapSpeed = DEFAULT_SNAP_SPEED;\n    if (!validAnimationSpeed(config.trashSpeed)) config.trashSpeed = DEFAULT_TRASH_SPEED;\n\n    // throttle rate\n    if (!validThrottleRate(config.dragThrottleRate)) config.dragThrottleRate = DEFAULT_DRAG_THROTTLE_RATE;\n    return config;\n  }\n\n  // ---------------------------------------------------------------------------\n  // Dependencies\n  // ---------------------------------------------------------------------------\n\n  // check for a compatible version of jQuery\n  function checkJQuery() {\n    if (!validJQueryVersion()) {\n      var errorMsg = 'Chessboard Error 1005: Unable to find a valid version of jQuery. ' + 'Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or higher on the page' + '\\n\\n' + 'Exiting' + ELLIPSIS;\n      window.alert(errorMsg);\n      return false;\n    }\n    return true;\n  }\n\n  // return either boolean false or the $container element\n  function checkContainerArg(containerElOrString) {\n    if (containerElOrString === '') {\n      var errorMsg1 = 'Chessboard Error 1001: ' + 'The first argument to Chessboard() cannot be an empty string.' + '\\n\\n' + 'Exiting' + ELLIPSIS;\n      window.alert(errorMsg1);\n      return false;\n    }\n\n    // convert containerEl to query selector if it is a string\n    if (isString(containerElOrString) && containerElOrString.charAt(0) !== '#') {\n      containerElOrString = '#' + containerElOrString;\n    }\n\n    // containerEl must be something that becomes a jQuery collection of size 1\n    var $container = $(containerElOrString);\n    if ($container.length !== 1) {\n      var errorMsg2 = 'Chessboard Error 1003: ' + 'The first argument to Chessboard() must be the ID of a DOM node, ' + 'an ID query selector, or a single DOM node.' + '\\n\\n' + 'Exiting' + ELLIPSIS;\n      window.alert(errorMsg2);\n      return false;\n    }\n    return $container;\n  }\n\n  // ---------------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------------\n\n  function constructor(containerElOrString, config) {\n    // first things first: check basic dependencies\n    if (!checkJQuery()) return null;\n    var $container = checkContainerArg(containerElOrString);\n    if (!$container) return null;\n\n    // ensure the config object is what we expect\n    config = expandConfigArgumentShorthand(config);\n    config = expandConfig(config);\n\n    // DOM elements\n    var $board = null;\n    var $draggedPiece = null;\n    var $sparePiecesTop = null;\n    var $sparePiecesBottom = null;\n\n    // constructor return object\n    var widget = {};\n\n    // -------------------------------------------------------------------------\n    // Stateful\n    // -------------------------------------------------------------------------\n\n    var boardBorderSize = 2;\n    var currentOrientation = 'white';\n    var currentPosition = {};\n    var draggedPiece = null;\n    var draggedPieceLocation = null;\n    var draggedPieceSource = null;\n    var isDragging = false;\n    var sparePiecesElsIds = {};\n    var squareElsIds = {};\n    var squareElsOffsets = {};\n    var squareSize = 16;\n\n    // -------------------------------------------------------------------------\n    // Validation / Errors\n    // -------------------------------------------------------------------------\n\n    function error(code, msg, obj) {\n      // do nothing if showErrors is not set\n      if (config.hasOwnProperty('showErrors') !== true || config.showErrors === false) {\n        return;\n      }\n      var errorText = 'Chessboard Error ' + code + ': ' + msg;\n\n      // print to console\n      if (config.showErrors === 'console' && typeof console === 'object' && typeof console.log === 'function') {\n        console.log(errorText);\n        if (arguments.length >= 2) {\n          console.log(obj);\n        }\n        return;\n      }\n\n      // alert errors\n      if (config.showErrors === 'alert') {\n        if (obj) {\n          errorText += '\\n\\n' + JSON.stringify(obj);\n        }\n        window.alert(errorText);\n        return;\n      }\n\n      // custom function\n      if (isFunction(config.showErrors)) {\n        config.showErrors(code, msg, obj);\n      }\n    }\n    function setInitialState() {\n      currentOrientation = config.orientation;\n\n      // make sure position is valid\n      if (config.hasOwnProperty('position')) {\n        if (config.position === 'start') {\n          currentPosition = deepCopy(START_POSITION);\n        } else if (validFen(config.position)) {\n          currentPosition = fenToObj(config.position);\n        } else if (validPositionObject(config.position)) {\n          currentPosition = deepCopy(config.position);\n        } else {\n          error(7263, 'Invalid value passed to config.position.', config.position);\n        }\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // DOM Misc\n    // -------------------------------------------------------------------------\n\n    // calculates square size based on the width of the container\n    // got a little CSS black magic here, so let me explain:\n    // get the width of the container element (could be anything), reduce by 1 for\n    // fudge factor, and then keep reducing until we find an exact mod 8 for\n    // our square size\n    function calculateSquareSize() {\n      var containerWidth = parseInt($container.width(), 10);\n\n      // defensive, prevent infinite loop\n      if (!containerWidth || containerWidth <= 0) {\n        return 0;\n      }\n\n      // pad one pixel\n      var boardWidth = containerWidth - 1;\n      while (boardWidth % 8 !== 0 && boardWidth > 0) {\n        boardWidth = boardWidth - 1;\n      }\n      return boardWidth / 8;\n    }\n\n    // create random IDs for elements\n    function createElIds() {\n      // squares on the board\n      for (var i = 0; i < COLUMNS.length; i++) {\n        for (var j = 1; j <= 8; j++) {\n          var square = COLUMNS[i] + j;\n          squareElsIds[square] = square + '-' + uuid();\n        }\n      }\n\n      // spare pieces\n      var pieces = 'KQRNBP'.split('');\n      for (i = 0; i < pieces.length; i++) {\n        var whitePiece = 'w' + pieces[i];\n        var blackPiece = 'b' + pieces[i];\n        sparePiecesElsIds[whitePiece] = whitePiece + '-' + uuid();\n        sparePiecesElsIds[blackPiece] = blackPiece + '-' + uuid();\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Markup Building\n    // -------------------------------------------------------------------------\n\n    function buildBoardHTML(orientation) {\n      if (orientation !== 'black') {\n        orientation = 'white';\n      }\n      var html = '';\n\n      // algebraic notation / orientation\n      var alpha = deepCopy(COLUMNS);\n      var row = 8;\n      if (orientation === 'black') {\n        alpha.reverse();\n        row = 1;\n      }\n      var squareColor = 'white';\n      for (var i = 0; i < 8; i++) {\n        html += '<div class=\"{row}\">';\n        for (var j = 0; j < 8; j++) {\n          var square = alpha[j] + row;\n          html += '<div class=\"{square} ' + CSS[squareColor] + ' ' + 'square-' + square + '\" ' + 'style=\"width:' + squareSize + 'px;height:' + squareSize + 'px;\" ' + 'id=\"' + squareElsIds[square] + '\" ' + 'data-square=\"' + square + '\">';\n          if (config.showNotation) {\n            // alpha notation\n            if (orientation === 'white' && row === 1 || orientation === 'black' && row === 8) {\n              html += '<div class=\"{notation} {alpha}\">' + alpha[j] + '</div>';\n            }\n\n            // numeric notation\n            if (j === 0) {\n              html += '<div class=\"{notation} {numeric}\">' + row + '</div>';\n            }\n          }\n          html += '</div>'; // end .square\n\n          squareColor = squareColor === 'white' ? 'black' : 'white';\n        }\n        html += '<div class=\"{clearfix}\"></div></div>';\n        squareColor = squareColor === 'white' ? 'black' : 'white';\n        if (orientation === 'white') {\n          row = row - 1;\n        } else {\n          row = row + 1;\n        }\n      }\n      return interpolateTemplate(html, CSS);\n    }\n    function buildPieceImgSrc(piece) {\n      if (isFunction(config.pieceTheme)) {\n        return config.pieceTheme(piece);\n      }\n      if (isString(config.pieceTheme)) {\n        return interpolateTemplate(config.pieceTheme, {\n          piece: piece\n        });\n      }\n\n      // NOTE: this should never happen\n      error(8272, 'Unable to build image source for config.pieceTheme.');\n      return '';\n    }\n    function buildPieceHTML(piece, hidden, id) {\n      var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\n      if (isString(id) && id !== '') {\n        html += 'id=\"' + id + '\" ';\n      }\n      html += 'alt=\"\" ' + 'class=\"{piece}\" ' + 'data-piece=\"' + piece + '\" ' + 'style=\"width:' + squareSize + 'px;' + 'height:' + squareSize + 'px;';\n      if (hidden) {\n        html += 'display:none;';\n      }\n      html += '\" />';\n      return interpolateTemplate(html, CSS);\n    }\n    function buildSparePiecesHTML(color) {\n      var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\n      if (color === 'black') {\n        pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\n      }\n      var html = '';\n      for (var i = 0; i < pieces.length; i++) {\n        html += buildPieceHTML(pieces[i], false, sparePiecesElsIds[pieces[i]]);\n      }\n      return html;\n    }\n\n    // -------------------------------------------------------------------------\n    // Animations\n    // -------------------------------------------------------------------------\n\n    function animateSquareToSquare(src, dest, piece, completeFn) {\n      // get information about the source and destination squares\n      var $srcSquare = $('#' + squareElsIds[src]);\n      var srcSquarePosition = $srcSquare.offset();\n      var $destSquare = $('#' + squareElsIds[dest]);\n      var destSquarePosition = $destSquare.offset();\n\n      // create the animated piece and absolutely position it\n      // over the source square\n      var animatedPieceId = uuid();\n      $('body').append(buildPieceHTML(piece, true, animatedPieceId));\n      var $animatedPiece = $('#' + animatedPieceId);\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        top: srcSquarePosition.top,\n        left: srcSquarePosition.left\n      });\n\n      // remove original piece from source square\n      $srcSquare.find('.' + CSS.piece).remove();\n      function onFinishAnimation1() {\n        // add the \"real\" piece to the destination square\n        $destSquare.append(buildPieceHTML(piece));\n\n        // remove the animated piece\n        $animatedPiece.remove();\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn();\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation1\n      };\n      $animatedPiece.animate(destSquarePosition, opts);\n    }\n    function animateSparePieceToSquare(piece, dest, completeFn) {\n      var srcOffset = $('#' + sparePiecesElsIds[piece]).offset();\n      var $destSquare = $('#' + squareElsIds[dest]);\n      var destOffset = $destSquare.offset();\n\n      // create the animate piece\n      var pieceId = uuid();\n      $('body').append(buildPieceHTML(piece, true, pieceId));\n      var $animatedPiece = $('#' + pieceId);\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        left: srcOffset.left,\n        top: srcOffset.top\n      });\n\n      // on complete\n      function onFinishAnimation2() {\n        // add the \"real\" piece to the destination square\n        $destSquare.find('.' + CSS.piece).remove();\n        $destSquare.append(buildPieceHTML(piece));\n\n        // remove the animated piece\n        $animatedPiece.remove();\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn();\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation2\n      };\n      $animatedPiece.animate(destOffset, opts);\n    }\n\n    // execute an array of animations\n    function doAnimations(animations, oldPos, newPos) {\n      if (animations.length === 0) return;\n      var numFinished = 0;\n      function onFinishAnimation3() {\n        // exit if all the animations aren't finished\n        numFinished = numFinished + 1;\n        if (numFinished !== animations.length) return;\n        drawPositionInstant();\n\n        // run their onMoveEnd function\n        if (isFunction(config.onMoveEnd)) {\n          config.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\n        }\n      }\n      for (var i = 0; i < animations.length; i++) {\n        var animation = animations[i];\n\n        // clear a piece\n        if (animation.type === 'clear') {\n          $('#' + squareElsIds[animation.square] + ' .' + CSS.piece).fadeOut(config.trashSpeed, onFinishAnimation3);\n\n          // add a piece with no spare pieces - fade the piece onto the square\n        } else if (animation.type === 'add' && !config.sparePieces) {\n          $('#' + squareElsIds[animation.square]).append(buildPieceHTML(animation.piece, true)).find('.' + CSS.piece).fadeIn(config.appearSpeed, onFinishAnimation3);\n\n          // add a piece with spare pieces - animate from the spares\n        } else if (animation.type === 'add' && config.sparePieces) {\n          animateSparePieceToSquare(animation.piece, animation.square, onFinishAnimation3);\n\n          // move a piece from squareA to squareB\n        } else if (animation.type === 'move') {\n          animateSquareToSquare(animation.source, animation.destination, animation.piece, onFinishAnimation3);\n        }\n      }\n    }\n\n    // calculate an array of animations that need to happen in order to get\n    // from pos1 to pos2\n    function calculateAnimations(pos1, pos2) {\n      // make copies of both\n      pos1 = deepCopy(pos1);\n      pos2 = deepCopy(pos2);\n      var animations = [];\n      var squaresMovedTo = {};\n\n      // remove pieces that are the same in both positions\n      for (var i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue;\n        if (pos1.hasOwnProperty(i) && pos1[i] === pos2[i]) {\n          delete pos1[i];\n          delete pos2[i];\n        }\n      }\n\n      // find all the \"move\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue;\n        var closestPiece = findClosestPiece(pos1, pos2[i], i);\n        if (closestPiece) {\n          animations.push({\n            type: 'move',\n            source: closestPiece,\n            destination: i,\n            piece: pos2[i]\n          });\n          delete pos1[closestPiece];\n          delete pos2[i];\n          squaresMovedTo[i] = true;\n        }\n      }\n\n      // \"add\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue;\n        animations.push({\n          type: 'add',\n          square: i,\n          piece: pos2[i]\n        });\n        delete pos2[i];\n      }\n\n      // \"clear\" animations\n      for (i in pos1) {\n        if (!pos1.hasOwnProperty(i)) continue;\n\n        // do not clear a piece if it is on a square that is the result\n        // of a \"move\", ie: a piece capture\n        if (squaresMovedTo.hasOwnProperty(i)) continue;\n        animations.push({\n          type: 'clear',\n          square: i,\n          piece: pos1[i]\n        });\n        delete pos1[i];\n      }\n      return animations;\n    }\n\n    // -------------------------------------------------------------------------\n    // Control Flow\n    // -------------------------------------------------------------------------\n\n    function drawPositionInstant() {\n      // clear the board\n      $board.find('.' + CSS.piece).remove();\n\n      // add the pieces\n      for (var i in currentPosition) {\n        if (!currentPosition.hasOwnProperty(i)) continue;\n        $('#' + squareElsIds[i]).append(buildPieceHTML(currentPosition[i]));\n      }\n    }\n    function drawBoard() {\n      $board.html(buildBoardHTML(currentOrientation, squareSize, config.showNotation));\n      drawPositionInstant();\n      if (config.sparePieces) {\n        if (currentOrientation === 'white') {\n          $sparePiecesTop.html(buildSparePiecesHTML('black'));\n          $sparePiecesBottom.html(buildSparePiecesHTML('white'));\n        } else {\n          $sparePiecesTop.html(buildSparePiecesHTML('white'));\n          $sparePiecesBottom.html(buildSparePiecesHTML('black'));\n        }\n      }\n    }\n    function setCurrentPosition(position) {\n      var oldPos = deepCopy(currentPosition);\n      var newPos = deepCopy(position);\n      var oldFen = objToFen(oldPos);\n      var newFen = objToFen(newPos);\n\n      // do nothing if no change in position\n      if (oldFen === newFen) return;\n\n      // run their onChange function\n      if (isFunction(config.onChange)) {\n        config.onChange(oldPos, newPos);\n      }\n\n      // update state\n      currentPosition = position;\n    }\n    function isXYOnSquare(x, y) {\n      for (var i in squareElsOffsets) {\n        if (!squareElsOffsets.hasOwnProperty(i)) continue;\n        var s = squareElsOffsets[i];\n        if (x >= s.left && x < s.left + squareSize && y >= s.top && y < s.top + squareSize) {\n          return i;\n        }\n      }\n      return 'offboard';\n    }\n\n    // records the XY coords of every square into memory\n    function captureSquareOffsets() {\n      squareElsOffsets = {};\n      for (var i in squareElsIds) {\n        if (!squareElsIds.hasOwnProperty(i)) continue;\n        squareElsOffsets[i] = $('#' + squareElsIds[i]).offset();\n      }\n    }\n    function removeSquareHighlights() {\n      $board.find('.' + CSS.square).removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\n    }\n    function snapbackDraggedPiece() {\n      // there is no \"snapback\" for spare pieces\n      if (draggedPieceSource === 'spare') {\n        trashDraggedPiece();\n        return;\n      }\n      removeSquareHighlights();\n\n      // animation complete\n      function complete() {\n        drawPositionInstant();\n        $draggedPiece.css('display', 'none');\n\n        // run their onSnapbackEnd function\n        if (isFunction(config.onSnapbackEnd)) {\n          config.onSnapbackEnd(draggedPiece, draggedPieceSource, deepCopy(currentPosition), currentOrientation);\n        }\n      }\n\n      // get source square position\n      var sourceSquarePosition = $('#' + squareElsIds[draggedPieceSource]).offset();\n\n      // animate the piece to the target square\n      var opts = {\n        duration: config.snapbackSpeed,\n        complete: complete\n      };\n      $draggedPiece.animate(sourceSquarePosition, opts);\n\n      // set state\n      isDragging = false;\n    }\n    function trashDraggedPiece() {\n      removeSquareHighlights();\n\n      // remove the source piece\n      var newPosition = deepCopy(currentPosition);\n      delete newPosition[draggedPieceSource];\n      setCurrentPosition(newPosition);\n\n      // redraw the position\n      drawPositionInstant();\n\n      // hide the dragged piece\n      $draggedPiece.fadeOut(config.trashSpeed);\n\n      // set state\n      isDragging = false;\n    }\n    function dropDraggedPieceOnSquare(square) {\n      removeSquareHighlights();\n\n      // update position\n      var newPosition = deepCopy(currentPosition);\n      delete newPosition[draggedPieceSource];\n      newPosition[square] = draggedPiece;\n      setCurrentPosition(newPosition);\n\n      // get target square information\n      var targetSquarePosition = $('#' + squareElsIds[square]).offset();\n\n      // animation complete\n      function onAnimationComplete() {\n        drawPositionInstant();\n        $draggedPiece.css('display', 'none');\n\n        // execute their onSnapEnd function\n        if (isFunction(config.onSnapEnd)) {\n          config.onSnapEnd(draggedPieceSource, square, draggedPiece);\n        }\n      }\n\n      // snap the piece to the target square\n      var opts = {\n        duration: config.snapSpeed,\n        complete: onAnimationComplete\n      };\n      $draggedPiece.animate(targetSquarePosition, opts);\n\n      // set state\n      isDragging = false;\n    }\n    function beginDraggingPiece(source, piece, x, y) {\n      // run their custom onDragStart function\n      // their custom onDragStart function can cancel drag start\n      if (isFunction(config.onDragStart) && config.onDragStart(source, piece, deepCopy(currentPosition), currentOrientation) === false) {\n        return;\n      }\n\n      // set state\n      isDragging = true;\n      draggedPiece = piece;\n      draggedPieceSource = source;\n\n      // if the piece came from spare pieces, location is offboard\n      if (source === 'spare') {\n        draggedPieceLocation = 'offboard';\n      } else {\n        draggedPieceLocation = source;\n      }\n\n      // capture the x, y coords of all squares in memory\n      captureSquareOffsets();\n\n      // create the dragged piece\n      $draggedPiece.attr('src', buildPieceImgSrc(piece)).css({\n        display: '',\n        position: 'absolute',\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      });\n      if (source !== 'spare') {\n        // highlight the source square and hide the piece\n        $('#' + squareElsIds[source]).addClass(CSS.highlight1).find('.' + CSS.piece).css('display', 'none');\n      }\n    }\n    function updateDraggedPiece(x, y) {\n      // put the dragged piece over the mouse cursor\n      $draggedPiece.css({\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      });\n\n      // get location\n      var location = isXYOnSquare(x, y);\n\n      // do nothing if the location has not changed\n      if (location === draggedPieceLocation) return;\n\n      // remove highlight from previous square\n      if (validSquare(draggedPieceLocation)) {\n        $('#' + squareElsIds[draggedPieceLocation]).removeClass(CSS.highlight2);\n      }\n\n      // add highlight to new square\n      if (validSquare(location)) {\n        $('#' + squareElsIds[location]).addClass(CSS.highlight2);\n      }\n\n      // run onDragMove\n      if (isFunction(config.onDragMove)) {\n        config.onDragMove(location, draggedPieceLocation, draggedPieceSource, draggedPiece, deepCopy(currentPosition), currentOrientation);\n      }\n\n      // update state\n      draggedPieceLocation = location;\n    }\n    function stopDraggedPiece(location) {\n      // determine what the action should be\n      var action = 'drop';\n      if (location === 'offboard' && config.dropOffBoard === 'snapback') {\n        action = 'snapback';\n      }\n      if (location === 'offboard' && config.dropOffBoard === 'trash') {\n        action = 'trash';\n      }\n\n      // run their onDrop function, which can potentially change the drop action\n      if (isFunction(config.onDrop)) {\n        var newPosition = deepCopy(currentPosition);\n\n        // source piece is a spare piece and position is off the board\n        // if (draggedPieceSource === 'spare' && location === 'offboard') {...}\n        // position has not changed; do nothing\n\n        // source piece is a spare piece and position is on the board\n        if (draggedPieceSource === 'spare' && validSquare(location)) {\n          // add the piece to the board\n          newPosition[location] = draggedPiece;\n        }\n\n        // source piece was on the board and position is off the board\n        if (validSquare(draggedPieceSource) && location === 'offboard') {\n          // remove the piece from the board\n          delete newPosition[draggedPieceSource];\n        }\n\n        // source piece was on the board and position is on the board\n        if (validSquare(draggedPieceSource) && validSquare(location)) {\n          // move the piece\n          delete newPosition[draggedPieceSource];\n          newPosition[location] = draggedPiece;\n        }\n        var oldPosition = deepCopy(currentPosition);\n        var result = config.onDrop(draggedPieceSource, location, draggedPiece, newPosition, oldPosition, currentOrientation);\n        if (result === 'snapback' || result === 'trash') {\n          action = result;\n        }\n      }\n\n      // do it!\n      if (action === 'snapback') {\n        snapbackDraggedPiece();\n      } else if (action === 'trash') {\n        trashDraggedPiece();\n      } else if (action === 'drop') {\n        dropDraggedPieceOnSquare(location);\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    // clear the board\n    widget.clear = function (useAnimation) {\n      widget.position({}, useAnimation);\n    };\n\n    // remove the widget from the page\n    widget.destroy = function () {\n      // remove markup\n      $container.html('');\n      $draggedPiece.remove();\n\n      // remove event handlers\n      $container.unbind();\n    };\n\n    // shorthand method to get the current FEN\n    widget.fen = function () {\n      return widget.position('fen');\n    };\n\n    // flip orientation\n    widget.flip = function () {\n      return widget.orientation('flip');\n    };\n\n    // move pieces\n    // TODO: this method should be variadic as well as accept an array of moves\n    widget.move = function () {\n      // no need to throw an error here; just do nothing\n      // TODO: this should return the current position\n      if (arguments.length === 0) return;\n      var useAnimation = true;\n\n      // collect the moves into an object\n      var moves = {};\n      for (var i = 0; i < arguments.length; i++) {\n        // any \"false\" to this function means no animations\n        if (arguments[i] === false) {\n          useAnimation = false;\n          continue;\n        }\n\n        // skip invalid arguments\n        if (!validMove(arguments[i])) {\n          error(2826, 'Invalid move passed to the move method.', arguments[i]);\n          continue;\n        }\n        var tmp = arguments[i].split('-');\n        moves[tmp[0]] = tmp[1];\n      }\n\n      // calculate position from moves\n      var newPos = calculatePositionFromMoves(currentPosition, moves);\n\n      // update the board\n      widget.position(newPos, useAnimation);\n\n      // return the new position object\n      return newPos;\n    };\n    widget.orientation = function (arg) {\n      // no arguments, return the current orientation\n      if (arguments.length === 0) {\n        return currentOrientation;\n      }\n\n      // set to white or black\n      if (arg === 'white' || arg === 'black') {\n        currentOrientation = arg;\n        drawBoard();\n        return currentOrientation;\n      }\n\n      // flip orientation\n      if (arg === 'flip') {\n        currentOrientation = currentOrientation === 'white' ? 'black' : 'white';\n        drawBoard();\n        return currentOrientation;\n      }\n      error(5482, 'Invalid value passed to the orientation method.', arg);\n    };\n    widget.position = function (position, useAnimation) {\n      // no arguments, return the current position\n      if (arguments.length === 0) {\n        return deepCopy(currentPosition);\n      }\n\n      // get position as FEN\n      if (isString(position) && position.toLowerCase() === 'fen') {\n        return objToFen(currentPosition);\n      }\n\n      // start position\n      if (isString(position) && position.toLowerCase() === 'start') {\n        position = deepCopy(START_POSITION);\n      }\n\n      // convert FEN to position object\n      if (validFen(position)) {\n        position = fenToObj(position);\n      }\n\n      // validate position object\n      if (!validPositionObject(position)) {\n        error(6482, 'Invalid value passed to the position method.', position);\n        return;\n      }\n\n      // default for useAnimations is true\n      if (useAnimation !== false) useAnimation = true;\n      if (useAnimation) {\n        // start the animations\n        var animations = calculateAnimations(currentPosition, position);\n        doAnimations(animations, currentPosition, position);\n\n        // set the new position\n        setCurrentPosition(position);\n      } else {\n        // instant update\n        setCurrentPosition(position);\n        drawPositionInstant();\n      }\n    };\n    widget.resize = function () {\n      // calulate the new square size\n      squareSize = calculateSquareSize();\n\n      // set board width\n      $board.css('width', squareSize * 8 + 'px');\n\n      // set drag piece size\n      $draggedPiece.css({\n        height: squareSize,\n        width: squareSize\n      });\n\n      // spare pieces\n      if (config.sparePieces) {\n        $container.find('.' + CSS.sparePieces).css('paddingLeft', squareSize + boardBorderSize + 'px');\n      }\n\n      // redraw the board\n      drawBoard();\n    };\n\n    // set the starting position\n    widget.start = function (useAnimation) {\n      widget.position('start', useAnimation);\n    };\n\n    // -------------------------------------------------------------------------\n    // Browser Events\n    // -------------------------------------------------------------------------\n\n    function stopDefault(evt) {\n      evt.preventDefault();\n    }\n    function mousedownSquare(evt) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return;\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square');\n      if (!validSquare(square)) return;\n      if (!currentPosition.hasOwnProperty(square)) return;\n      beginDraggingPiece(square, currentPosition[square], evt.pageX, evt.pageY);\n    }\n    function touchstartSquare(e) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return;\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square');\n      if (!validSquare(square)) return;\n      if (!currentPosition.hasOwnProperty(square)) return;\n      e = e.originalEvent;\n      beginDraggingPiece(square, currentPosition[square], e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n    }\n    function mousedownSparePiece(evt) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return;\n      var piece = $(this).attr('data-piece');\n      beginDraggingPiece('spare', piece, evt.pageX, evt.pageY);\n    }\n    function touchstartSparePiece(e) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return;\n      var piece = $(this).attr('data-piece');\n      e = e.originalEvent;\n      beginDraggingPiece('spare', piece, e.changedTouches[0].pageX, e.changedTouches[0].pageY);\n    }\n    function mousemoveWindow(evt) {\n      if (isDragging) {\n        updateDraggedPiece(evt.pageX, evt.pageY);\n      }\n    }\n    var throttledMousemoveWindow = throttle(mousemoveWindow, config.dragThrottleRate);\n    function touchmoveWindow(evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return;\n\n      // prevent screen from scrolling\n      evt.preventDefault();\n      updateDraggedPiece(evt.originalEvent.changedTouches[0].pageX, evt.originalEvent.changedTouches[0].pageY);\n    }\n    var throttledTouchmoveWindow = throttle(touchmoveWindow, config.dragThrottleRate);\n    function mouseupWindow(evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return;\n\n      // get the location\n      var location = isXYOnSquare(evt.pageX, evt.pageY);\n      stopDraggedPiece(location);\n    }\n    function touchendWindow(evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return;\n\n      // get the location\n      var location = isXYOnSquare(evt.originalEvent.changedTouches[0].pageX, evt.originalEvent.changedTouches[0].pageY);\n      stopDraggedPiece(location);\n    }\n    function mouseenterSquare(evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return;\n\n      // exit if they did not provide a onMouseoverSquare function\n      if (!isFunction(config.onMouseoverSquare)) return;\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square');\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return;\n\n      // get the piece on this square\n      var piece = false;\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square];\n      }\n\n      // execute their function\n      config.onMouseoverSquare(square, piece, deepCopy(currentPosition), currentOrientation);\n    }\n    function mouseleaveSquare(evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return;\n\n      // exit if they did not provide an onMouseoutSquare function\n      if (!isFunction(config.onMouseoutSquare)) return;\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square');\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return;\n\n      // get the piece on this square\n      var piece = false;\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square];\n      }\n\n      // execute their function\n      config.onMouseoutSquare(square, piece, deepCopy(currentPosition), currentOrientation);\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    function addEvents() {\n      // prevent \"image drag\"\n      $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\n\n      // mouse drag pieces\n      $board.on('mousedown', '.' + CSS.square, mousedownSquare);\n      $container.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece);\n\n      // mouse enter / leave square\n      $board.on('mouseenter', '.' + CSS.square, mouseenterSquare).on('mouseleave', '.' + CSS.square, mouseleaveSquare);\n\n      // piece drag\n      var $window = $(window);\n      $window.on('mousemove', throttledMousemoveWindow).on('mouseup', mouseupWindow);\n\n      // touch drag pieces\n      if (isTouchDevice()) {\n        $board.on('touchstart', '.' + CSS.square, touchstartSquare);\n        $container.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece);\n        $window.on('touchmove', throttledTouchmoveWindow).on('touchend', touchendWindow);\n      }\n    }\n    function initDOM() {\n      // create unique IDs for all the elements we will create\n      createElIds();\n\n      // build board and save it in memory\n      $container.html(buildContainerHTML(config.sparePieces));\n      $board = $container.find('.' + CSS.board);\n      if (config.sparePieces) {\n        $sparePiecesTop = $container.find('.' + CSS.sparePiecesTop);\n        $sparePiecesBottom = $container.find('.' + CSS.sparePiecesBottom);\n      }\n\n      // create the drag piece\n      var draggedPieceId = uuid();\n      $('body').append(buildPieceHTML('wP', true, draggedPieceId));\n      $draggedPiece = $('#' + draggedPieceId);\n\n      // TODO: need to remove this dragged piece element if the board is no\n      // longer in the DOM\n\n      // get the border size\n      boardBorderSize = parseInt($board.css('borderLeftWidth'), 10);\n\n      // set the size and draw the board\n      widget.resize();\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    setInitialState();\n    initDOM();\n    addEvents();\n\n    // return the widget object\n    return widget;\n  } // end constructor\n\n  // TODO: do module exports here\n  window['Chessboard'] = constructor;\n\n  // support legacy ChessBoard name\n  window['ChessBoard'] = window['Chessboard'];\n\n  // expose util functions\n  window['Chessboard']['fenToObj'] = fenToObj;\n  window['Chessboard']['objToFen'] = objToFen;\n})(); // end anonymous wrapper\n\n/* export Chessboard object if using node or any other CommonJS compatible\n * environment */\n\nconsole.log(232);","map":{"version":3,"names":["console","log","$","window","COLUMNS","split","DEFAULT_DRAG_THROTTLE_RATE","ELLIPSIS","MINIMUM_JQUERY_VERSION","RUN_ASSERTS","START_FEN","START_POSITION","fenToObj","DEFAULT_APPEAR_SPEED","DEFAULT_MOVE_SPEED","DEFAULT_SNAPBACK_SPEED","DEFAULT_SNAP_SPEED","DEFAULT_TRASH_SPEED","CSS","throttle","f","interval","scope","timeout","shouldFire","args","handleTimeout","fire","setTimeout","apply","_args","arguments","uuid","replace","c","r","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","tmp","major","parseInt","minor","patch","validSemanticVersion","minimum","versionNum","minimumNum","interpolateTemplate","str","obj","key","hasOwnProperty","keyTemplateStr","value","indexOf","assert","a","p","b","isString","s","isFunction","isInteger","n","isFinite","floor","validAnimationSpeed","speed","validThrottleRate","rate","validMove","move","squares","length","validSquare","square","search","validPieceCode","code","validFen","fen","expandFenEmptySquares","chunks","i","validPositionObject","pos","isPlainObject","e2","d2","y2","isTouchDevice","document","documentElement","validJQueryVersion","fn","jquery","fenToPieceCode","piece","toLowerCase","toUpperCase","pieceCodeToFen","pieceCodeLetters","rows","position","currentRow","row","colIdx","j","numEmptySquares","objToFen","squeezeFenEmptySquares","a2","squareDistance","squareA","squareB","squareAArray","squareAx","squareAy","squareBArray","squareBx","squareBy","xDelta","abs","yDelta","findClosestPiece","closestSquares","createRadius","push","distance","sort","surroundingSquares","calculatePositionFromMoves","moves","newPosition","buildContainerHTML","hasSparePieces","html","expandConfigArgumentShorthand","config","expandConfig","orientation","showNotation","draggable","dropOffBoard","sparePieces","pieceTheme","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","dragThrottleRate","checkJQuery","errorMsg","alert","checkContainerArg","containerElOrString","errorMsg1","charAt","$container","errorMsg2","constructor","$board","$draggedPiece","$sparePiecesTop","$sparePiecesBottom","widget","boardBorderSize","currentOrientation","currentPosition","draggedPiece","draggedPieceLocation","draggedPieceSource","isDragging","sparePiecesElsIds","squareElsIds","squareElsOffsets","squareSize","error","msg","showErrors","errorText","setInitialState","calculateSquareSize","containerWidth","width","boardWidth","createElIds","pieces","whitePiece","blackPiece","buildBoardHTML","alpha","reverse","squareColor","buildPieceImgSrc","buildPieceHTML","hidden","id","buildSparePiecesHTML","color","animateSquareToSquare","src","dest","completeFn","$srcSquare","srcSquarePosition","offset","$destSquare","destSquarePosition","animatedPieceId","append","$animatedPiece","css","display","top","left","find","remove","onFinishAnimation1","opts","duration","complete","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","onFinishAnimation2","doAnimations","animations","oldPos","newPos","numFinished","onFinishAnimation3","drawPositionInstant","onMoveEnd","animation","type","fadeOut","fadeIn","source","destination","calculateAnimations","pos1","pos2","squaresMovedTo","closestPiece","drawBoard","setCurrentPosition","oldFen","newFen","onChange","isXYOnSquare","x","y","captureSquareOffsets","removeSquareHighlights","removeClass","highlight1","highlight2","snapbackDraggedPiece","trashDraggedPiece","onSnapbackEnd","sourceSquarePosition","dropDraggedPieceOnSquare","targetSquarePosition","onAnimationComplete","onSnapEnd","beginDraggingPiece","onDragStart","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","action","onDrop","oldPosition","result","clear","useAnimation","destroy","unbind","flip","arg","resize","height","start","stopDefault","evt","preventDefault","mousedownSquare","pageX","pageY","touchstartSquare","e","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","mousemoveWindow","throttledMousemoveWindow","touchmoveWindow","throttledTouchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","addEvents","on","$window","initDOM","board","sparePiecesTop","sparePiecesBottom","draggedPieceId"],"sources":["/Users/Ila/PycharmProjects/ChessVue/chess-vue/src/chessboardjs/js/chessboard.js"],"sourcesContent":["// chessboard.js v@VERSION\n// https://github.com/oakmac/chessboardjs/\n//\n// Copyright (c) 2019, Chris Oakman\n// Released under the MIT license\n// https://github.com/oakmac/chessboardjs/blob/master/LICENSE.md\n\n// start anonymous scope\nconsole.log(12312)\n;(function () {\n  'use strict'\n\n  var $ = window['jQuery']\n\n  // ---------------------------------------------------------------------------\n  // Constants\n  // ---------------------------------------------------------------------------\n\n  var COLUMNS = 'abcdefgh'.split('')\n  var DEFAULT_DRAG_THROTTLE_RATE = 20\n  var ELLIPSIS = 'â€¦'\n  var MINIMUM_JQUERY_VERSION = '1.8.3'\n  var RUN_ASSERTS = true\n  var START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'\n  var START_POSITION = fenToObj(START_FEN)\n\n  // default animation speeds\n  var DEFAULT_APPEAR_SPEED = 200\n  var DEFAULT_MOVE_SPEED = 200\n  var DEFAULT_SNAPBACK_SPEED = 60\n  var DEFAULT_SNAP_SPEED = 30\n  var DEFAULT_TRASH_SPEED = 100\n\n  // use unique class names to prevent clashing with anything else on the page\n  // and simplify selectors\n  // NOTE: these should never change\n  var CSS = {}\n  CSS['alpha'] = 'alpha-d2270'\n  CSS['black'] = 'black-3c85d'\n  CSS['board'] = 'board-b72b1'\n  CSS['chessboard'] = 'chessboard-63f37'\n  CSS['clearfix'] = 'clearfix-7da63'\n  CSS['highlight1'] = 'highlight1-32417'\n  CSS['highlight2'] = 'highlight2-9c5d2'\n  CSS['notation'] = 'notation-322f9'\n  CSS['numeric'] = 'numeric-fc462'\n  CSS['piece'] = 'piece-417db'\n  CSS['row'] = 'row-5277c'\n  CSS['sparePieces'] = 'spare-pieces-7492f'\n  CSS['sparePiecesBottom'] = 'spare-pieces-bottom-ae20f'\n  CSS['sparePiecesTop'] = 'spare-pieces-top-4028b'\n  CSS['square'] = 'square-55d63'\n  CSS['white'] = 'white-1e1d7'\n\n  // ---------------------------------------------------------------------------\n  // Misc Util Functions\n  // ---------------------------------------------------------------------------\n\n  function throttle (f, interval, scope) {\n    var timeout = 0\n    var shouldFire = false\n    var args = []\n\n    var handleTimeout = function () {\n      timeout = 0\n      if (shouldFire) {\n        shouldFire = false\n        fire()\n      }\n    }\n\n    var fire = function () {\n      timeout = window.setTimeout(handleTimeout, interval)\n      f.apply(scope, args)\n    }\n\n    return function (_args) {\n      args = arguments\n      if (!timeout) {\n        fire()\n      } else {\n        shouldFire = true\n      }\n    }\n  }\n\n  // function debounce (f, interval, scope) {\n  //   var timeout = 0\n  //   return function (_args) {\n  //     window.clearTimeout(timeout)\n  //     var args = arguments\n  //     timeout = window.setTimeout(function () {\n  //       f.apply(scope, args)\n  //     }, interval)\n  //   }\n  // }\n\n  function uuid () {\n    return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function (c) {\n      var r = (Math.random() * 16) | 0\n      return r.toString(16)\n    })\n  }\n\n  function deepCopy (thing) {\n    return JSON.parse(JSON.stringify(thing))\n  }\n\n  function parseSemVer (version) {\n    var tmp = version.split('.')\n    return {\n      major: parseInt(tmp[0], 10),\n      minor: parseInt(tmp[1], 10),\n      patch: parseInt(tmp[2], 10)\n    }\n  }\n\n  // returns true if version is >= minimum\n  function validSemanticVersion (version, minimum) {\n    version = parseSemVer(version)\n    minimum = parseSemVer(minimum)\n\n    var versionNum = (version.major * 100000 * 100000) +\n                     (version.minor * 100000) +\n                     version.patch\n    var minimumNum = (minimum.major * 100000 * 100000) +\n                     (minimum.minor * 100000) +\n                     minimum.patch\n\n    return versionNum >= minimumNum\n  }\n\n  function interpolateTemplate (str, obj) {\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) continue\n      var keyTemplateStr = '{' + key + '}'\n      var value = obj[key]\n      while (str.indexOf(keyTemplateStr) !== -1) {\n        str = str.replace(keyTemplateStr, value)\n      }\n    }\n    return str\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(interpolateTemplate('abc', {a: 'x'}) === 'abc')\n    console.assert(interpolateTemplate('{a}bc', {}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {p: 'q'}) === '{a}bc')\n    console.assert(interpolateTemplate('{a}bc', {a: 'x'}) === 'xbc')\n    console.assert(interpolateTemplate('{a}bc{a}bc', {a: 'x'}) === 'xbcxbc')\n    console.assert(interpolateTemplate('{a}{a}{b}', {a: 'x', b: 'y'}) === 'xxy')\n  }\n\n  // ---------------------------------------------------------------------------\n  // Predicates\n  // ---------------------------------------------------------------------------\n\n  function isString (s) {\n    return typeof s === 'string'\n  }\n\n  function isFunction (f) {\n    return typeof f === 'function'\n  }\n\n  function isInteger (n) {\n    return typeof n === 'number' &&\n           isFinite(n) &&\n           Math.floor(n) === n\n  }\n\n  function validAnimationSpeed (speed) {\n    if (speed === 'fast' || speed === 'slow') return true\n    if (!isInteger(speed)) return false\n    return speed >= 0\n  }\n\n  function validThrottleRate (rate) {\n    return isInteger(rate) &&\n           rate >= 1\n  }\n\n  function validMove (move) {\n    // move should be a string\n    if (!isString(move)) return false\n\n    // move should be in the form of \"e2-e4\", \"f6-d5\"\n    var squares = move.split('-')\n    if (squares.length !== 2) return false\n\n    return validSquare(squares[0]) && validSquare(squares[1])\n  }\n\n  function validSquare (square) {\n    return isString(square) && square.search(/^[a-h][1-8]$/) !== -1\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validSquare('a1'))\n    console.assert(validSquare('e2'))\n    console.assert(!validSquare('D2'))\n    console.assert(!validSquare('g9'))\n    console.assert(!validSquare('a'))\n    console.assert(!validSquare(true))\n    console.assert(!validSquare(null))\n    console.assert(!validSquare({}))\n  }\n\n  function validPieceCode (code) {\n    return isString(code) && code.search(/^[bw][KQRNBP]$/) !== -1\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validPieceCode('bP'))\n    console.assert(validPieceCode('bK'))\n    console.assert(validPieceCode('wK'))\n    console.assert(validPieceCode('wR'))\n    console.assert(!validPieceCode('WR'))\n    console.assert(!validPieceCode('Wr'))\n    console.assert(!validPieceCode('a'))\n    console.assert(!validPieceCode(true))\n    console.assert(!validPieceCode(null))\n    console.assert(!validPieceCode({}))\n  }\n\n  function validFen (fen) {\n    if (!isString(fen)) return false\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '')\n\n    // expand the empty square numbers to just 1s\n    fen = expandFenEmptySquares(fen)\n\n    // FEN should be 8 sections separated by slashes\n    var chunks = fen.split('/')\n    if (chunks.length !== 8) return false\n\n    // check each section\n    for (var i = 0; i < 8; i++) {\n      if (chunks[i].length !== 8 ||\n          chunks[i].search(/[^kqrnbpKQRNBP1]/) !== -1) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validFen(START_FEN))\n    console.assert(validFen('8/8/8/8/8/8/8/8'))\n    console.assert(validFen('r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R'))\n    console.assert(validFen('3r3r/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('3r3z/1p4pp/2nb1k2/pP3p2/8/PB2PN2/p4PPP/R4RK1 b - - 0 1'))\n    console.assert(!validFen('anbqkbnr/8/8/8/8/8/PPPPPPPP/8'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/'))\n    console.assert(!validFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBN'))\n    console.assert(!validFen('888888/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen('888888/pppppppp/74/8/8/8/PPPPPPPP/RNBQKBNR'))\n    console.assert(!validFen({}))\n  }\n\n  function validPositionObject (pos) {\n    if (!$.isPlainObject(pos)) return false\n\n    for (var i in pos) {\n      if (!pos.hasOwnProperty(i)) continue\n\n      if (!validSquare(i) || !validPieceCode(pos[i])) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(validPositionObject(START_POSITION))\n    console.assert(validPositionObject({}))\n    console.assert(validPositionObject({e2: 'wP'}))\n    console.assert(validPositionObject({e2: 'wP', d2: 'wP'}))\n    console.assert(!validPositionObject({e2: 'BP'}))\n    console.assert(!validPositionObject({y2: 'wP'}))\n    console.assert(!validPositionObject(null))\n    console.assert(!validPositionObject('start'))\n    console.assert(!validPositionObject(START_FEN))\n  }\n\n  function isTouchDevice () {\n    return 'ontouchstart' in document.documentElement\n  }\n\n  function validJQueryVersion () {\n    return typeof window.$ &&\n           $.fn &&\n           $.fn.jquery &&\n           validSemanticVersion($.fn.jquery, MINIMUM_JQUERY_VERSION)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Chess Util Functions\n  // ---------------------------------------------------------------------------\n\n  // convert FEN piece code to bP, wK, etc\n  function fenToPieceCode (piece) {\n    // black piece\n    if (piece.toLowerCase() === piece) {\n      return 'b' + piece.toUpperCase()\n    }\n\n    // white piece\n    return 'w' + piece.toUpperCase()\n  }\n\n  // convert bP, wK, etc code to FEN structure\n  function pieceCodeToFen (piece) {\n    var pieceCodeLetters = piece.split('')\n\n    // white piece\n    if (pieceCodeLetters[0] === 'w') {\n      return pieceCodeLetters[1].toUpperCase()\n    }\n\n    // black piece\n    return pieceCodeLetters[1].toLowerCase()\n  }\n\n  // convert FEN string to position object\n  // returns false if the FEN string is invalid\n  function fenToObj (fen) {\n    if (!validFen(fen)) return false\n\n    // cut off any move, castling, etc info from the end\n    // we're only interested in position information\n    fen = fen.replace(/ .+$/, '')\n\n    var rows = fen.split('/')\n    var position = {}\n\n    var currentRow = 8\n    for (var i = 0; i < 8; i++) {\n      var row = rows[i].split('')\n      var colIdx = 0\n\n      // loop through each character in the FEN section\n      for (var j = 0; j < row.length; j++) {\n        // number / empty squares\n        if (row[j].search(/[1-8]/) !== -1) {\n          var numEmptySquares = parseInt(row[j], 10)\n          colIdx = colIdx + numEmptySquares\n        } else {\n          // piece\n          var square = COLUMNS[colIdx] + currentRow\n          position[square] = fenToPieceCode(row[j])\n          colIdx = colIdx + 1\n        }\n      }\n\n      currentRow = currentRow - 1\n    }\n\n    return position\n  }\n\n  // position object to FEN string\n  // returns false if the obj is not a valid position object\n  function objToFen (obj) {\n    if (!validPositionObject(obj)) return false\n\n    var fen = ''\n\n    var currentRow = 8\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var square = COLUMNS[j] + currentRow\n\n        // piece exists\n        if (obj.hasOwnProperty(square)) {\n          fen = fen + pieceCodeToFen(obj[square])\n        } else {\n          // empty space\n          fen = fen + '1'\n        }\n      }\n\n      if (i !== 7) {\n        fen = fen + '/'\n      }\n\n      currentRow = currentRow - 1\n    }\n\n    // squeeze the empty numbers together\n    fen = squeezeFenEmptySquares(fen)\n\n    return fen\n  }\n\n  if (RUN_ASSERTS) {\n    console.assert(objToFen(START_POSITION) === START_FEN)\n    console.assert(objToFen({}) === '8/8/8/8/8/8/8/8')\n    console.assert(objToFen({a2: 'wP', 'b2': 'bP'}) === '8/8/8/8/8/8/Pp6/8')\n  }\n\n  function squeezeFenEmptySquares (fen) {\n    return fen.replace(/11111111/g, '8')\n      .replace(/1111111/g, '7')\n      .replace(/111111/g, '6')\n      .replace(/11111/g, '5')\n      .replace(/1111/g, '4')\n      .replace(/111/g, '3')\n      .replace(/11/g, '2')\n  }\n\n  function expandFenEmptySquares (fen) {\n    return fen.replace(/8/g, '11111111')\n      .replace(/7/g, '1111111')\n      .replace(/6/g, '111111')\n      .replace(/5/g, '11111')\n      .replace(/4/g, '1111')\n      .replace(/3/g, '111')\n      .replace(/2/g, '11')\n  }\n\n  // returns the distance between two squares\n  function squareDistance (squareA, squareB) {\n    var squareAArray = squareA.split('')\n    var squareAx = COLUMNS.indexOf(squareAArray[0]) + 1\n    var squareAy = parseInt(squareAArray[1], 10)\n\n    var squareBArray = squareB.split('')\n    var squareBx = COLUMNS.indexOf(squareBArray[0]) + 1\n    var squareBy = parseInt(squareBArray[1], 10)\n\n    var xDelta = Math.abs(squareAx - squareBx)\n    var yDelta = Math.abs(squareAy - squareBy)\n\n    if (xDelta >= yDelta) return xDelta\n    return yDelta\n  }\n\n  // returns the square of the closest instance of piece\n  // returns false if no instance of piece is found in position\n  function findClosestPiece (position, piece, square) {\n    // create array of closest squares from square\n    var closestSquares = createRadius(square)\n\n    // search through the position in order of distance for the piece\n    for (var i = 0; i < closestSquares.length; i++) {\n      var s = closestSquares[i]\n\n      if (position.hasOwnProperty(s) && position[s] === piece) {\n        return s\n      }\n    }\n\n    return false\n  }\n\n  // returns an array of closest squares from square\n  function createRadius (square) {\n    var squares = []\n\n    // calculate distance of all squares\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var s = COLUMNS[i] + (j + 1)\n\n        // skip the square we're starting from\n        if (square === s) continue\n\n        squares.push({\n          square: s,\n          distance: squareDistance(square, s)\n        })\n      }\n    }\n\n    // sort by distance\n    squares.sort(function (a, b) {\n      return a.distance - b.distance\n    })\n\n    // just return the square code\n    var surroundingSquares = []\n    for (i = 0; i < squares.length; i++) {\n      surroundingSquares.push(squares[i].square)\n    }\n\n    return surroundingSquares\n  }\n\n  // given a position and a set of moves, return a new position\n  // with the moves executed\n  function calculatePositionFromMoves (position, moves) {\n    var newPosition = deepCopy(position)\n\n    for (var i in moves) {\n      if (!moves.hasOwnProperty(i)) continue\n\n      // skip the move if the position doesn't have a piece on the source square\n      if (!newPosition.hasOwnProperty(i)) continue\n\n      var piece = newPosition[i]\n      delete newPosition[i]\n      newPosition[moves[i]] = piece\n    }\n\n    return newPosition\n  }\n\n  // TODO: add some asserts here for calculatePositionFromMoves\n\n  // ---------------------------------------------------------------------------\n  // HTML\n  // ---------------------------------------------------------------------------\n\n  function buildContainerHTML (hasSparePieces) {\n    var html = '<div class=\"{chessboard}\">'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesTop}\"></div>'\n    }\n\n    html += '<div class=\"{board}\"></div>'\n\n    if (hasSparePieces) {\n      html += '<div class=\"{sparePieces} {sparePiecesBottom}\"></div>'\n    }\n\n    html += '</div>'\n\n    return interpolateTemplate(html, CSS)\n  }\n\n  // ---------------------------------------------------------------------------\n  // Config\n  // ---------------------------------------------------------------------------\n\n  function expandConfigArgumentShorthand (config) {\n    if (config === 'start') {\n      config = {position: deepCopy(START_POSITION)}\n    } else if (validFen(config)) {\n      config = {position: fenToObj(config)}\n    } else if (validPositionObject(config)) {\n      config = {position: deepCopy(config)}\n    }\n\n    // config must be an object\n    if (!$.isPlainObject(config)) config = {}\n\n    return config\n  }\n\n  // validate config / set default options\n  function expandConfig (config) {\n    // default for orientation is white\n    if (config.orientation !== 'black') config.orientation = 'white'\n\n    // default for showNotation is true\n    if (config.showNotation !== false) config.showNotation = true\n\n    // default for draggable is false\n    if (config.draggable !== true) config.draggable = false\n\n    // default for dropOffBoard is 'snapback'\n    if (config.dropOffBoard !== 'trash') config.dropOffBoard = 'snapback'\n\n    // default for sparePieces is false\n    if (config.sparePieces !== true) config.sparePieces = false\n\n    // draggable must be true if sparePieces is enabled\n    if (config.sparePieces) config.draggable = true\n\n    // default piece theme is wikipedia\n    if (!config.hasOwnProperty('pieceTheme') ||\n        (!isString(config.pieceTheme) && !isFunction(config.pieceTheme))) {\n      config.pieceTheme = 'static/img/chesspieces/wikipedia/{piece}.png'\n    }\n\n    // animation speeds\n    if (!validAnimationSpeed(config.appearSpeed)) config.appearSpeed = DEFAULT_APPEAR_SPEED\n    if (!validAnimationSpeed(config.moveSpeed)) config.moveSpeed = DEFAULT_MOVE_SPEED\n    if (!validAnimationSpeed(config.snapbackSpeed)) config.snapbackSpeed = DEFAULT_SNAPBACK_SPEED\n    if (!validAnimationSpeed(config.snapSpeed)) config.snapSpeed = DEFAULT_SNAP_SPEED\n    if (!validAnimationSpeed(config.trashSpeed)) config.trashSpeed = DEFAULT_TRASH_SPEED\n\n    // throttle rate\n    if (!validThrottleRate(config.dragThrottleRate)) config.dragThrottleRate = DEFAULT_DRAG_THROTTLE_RATE\n\n    return config\n  }\n\n  // ---------------------------------------------------------------------------\n  // Dependencies\n  // ---------------------------------------------------------------------------\n\n  // check for a compatible version of jQuery\n  function checkJQuery () {\n    if (!validJQueryVersion()) {\n      var errorMsg = 'Chessboard Error 1005: Unable to find a valid version of jQuery. ' +\n        'Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or higher on the page' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg)\n      return false\n    }\n\n    return true\n  }\n\n  // return either boolean false or the $container element\n  function checkContainerArg (containerElOrString) {\n    if (containerElOrString === '') {\n      var errorMsg1 = 'Chessboard Error 1001: ' +\n        'The first argument to Chessboard() cannot be an empty string.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg1)\n      return false\n    }\n\n    // convert containerEl to query selector if it is a string\n    if (isString(containerElOrString) &&\n        containerElOrString.charAt(0) !== '#') {\n      containerElOrString = '#' + containerElOrString\n    }\n\n    // containerEl must be something that becomes a jQuery collection of size 1\n    var $container = $(containerElOrString)\n    if ($container.length !== 1) {\n      var errorMsg2 = 'Chessboard Error 1003: ' +\n        'The first argument to Chessboard() must be the ID of a DOM node, ' +\n        'an ID query selector, or a single DOM node.' +\n        '\\n\\n' +\n        'Exiting' + ELLIPSIS\n      window.alert(errorMsg2)\n      return false\n    }\n\n    return $container\n  }\n\n  // ---------------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------------\n\n  function constructor (containerElOrString, config) {\n    // first things first: check basic dependencies\n    if (!checkJQuery()) return null\n    var $container = checkContainerArg(containerElOrString)\n    if (!$container) return null\n\n    // ensure the config object is what we expect\n    config = expandConfigArgumentShorthand(config)\n    config = expandConfig(config)\n\n    // DOM elements\n    var $board = null\n    var $draggedPiece = null\n    var $sparePiecesTop = null\n    var $sparePiecesBottom = null\n\n    // constructor return object\n    var widget = {}\n\n    // -------------------------------------------------------------------------\n    // Stateful\n    // -------------------------------------------------------------------------\n\n    var boardBorderSize = 2\n    var currentOrientation = 'white'\n    var currentPosition = {}\n    var draggedPiece = null\n    var draggedPieceLocation = null\n    var draggedPieceSource = null\n    var isDragging = false\n    var sparePiecesElsIds = {}\n    var squareElsIds = {}\n    var squareElsOffsets = {}\n    var squareSize = 16\n\n    // -------------------------------------------------------------------------\n    // Validation / Errors\n    // -------------------------------------------------------------------------\n\n    function error (code, msg, obj) {\n      // do nothing if showErrors is not set\n      if (\n        config.hasOwnProperty('showErrors') !== true ||\n          config.showErrors === false\n      ) {\n        return\n      }\n\n      var errorText = 'Chessboard Error ' + code + ': ' + msg\n\n      // print to console\n      if (\n        config.showErrors === 'console' &&\n          typeof console === 'object' &&\n          typeof console.log === 'function'\n      ) {\n        console.log(errorText)\n        if (arguments.length >= 2) {\n          console.log(obj)\n        }\n        return\n      }\n\n      // alert errors\n      if (config.showErrors === 'alert') {\n        if (obj) {\n          errorText += '\\n\\n' + JSON.stringify(obj)\n        }\n        window.alert(errorText)\n        return\n      }\n\n      // custom function\n      if (isFunction(config.showErrors)) {\n        config.showErrors(code, msg, obj)\n      }\n    }\n\n    function setInitialState () {\n      currentOrientation = config.orientation\n\n      // make sure position is valid\n      if (config.hasOwnProperty('position')) {\n        if (config.position === 'start') {\n          currentPosition = deepCopy(START_POSITION)\n        } else if (validFen(config.position)) {\n          currentPosition = fenToObj(config.position)\n        } else if (validPositionObject(config.position)) {\n          currentPosition = deepCopy(config.position)\n        } else {\n          error(\n            7263,\n            'Invalid value passed to config.position.',\n            config.position\n          )\n        }\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // DOM Misc\n    // -------------------------------------------------------------------------\n\n    // calculates square size based on the width of the container\n    // got a little CSS black magic here, so let me explain:\n    // get the width of the container element (could be anything), reduce by 1 for\n    // fudge factor, and then keep reducing until we find an exact mod 8 for\n    // our square size\n    function calculateSquareSize () {\n      var containerWidth = parseInt($container.width(), 10)\n\n      // defensive, prevent infinite loop\n      if (!containerWidth || containerWidth <= 0) {\n        return 0\n      }\n\n      // pad one pixel\n      var boardWidth = containerWidth - 1\n\n      while (boardWidth % 8 !== 0 && boardWidth > 0) {\n        boardWidth = boardWidth - 1\n      }\n\n      return boardWidth / 8\n    }\n\n    // create random IDs for elements\n    function createElIds () {\n      // squares on the board\n      for (var i = 0; i < COLUMNS.length; i++) {\n        for (var j = 1; j <= 8; j++) {\n          var square = COLUMNS[i] + j\n          squareElsIds[square] = square + '-' + uuid()\n        }\n      }\n\n      // spare pieces\n      var pieces = 'KQRNBP'.split('')\n      for (i = 0; i < pieces.length; i++) {\n        var whitePiece = 'w' + pieces[i]\n        var blackPiece = 'b' + pieces[i]\n        sparePiecesElsIds[whitePiece] = whitePiece + '-' + uuid()\n        sparePiecesElsIds[blackPiece] = blackPiece + '-' + uuid()\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Markup Building\n    // -------------------------------------------------------------------------\n\n    function buildBoardHTML (orientation) {\n      if (orientation !== 'black') {\n        orientation = 'white'\n      }\n\n      var html = ''\n\n      // algebraic notation / orientation\n      var alpha = deepCopy(COLUMNS)\n      var row = 8\n      if (orientation === 'black') {\n        alpha.reverse()\n        row = 1\n      }\n\n      var squareColor = 'white'\n      for (var i = 0; i < 8; i++) {\n        html += '<div class=\"{row}\">'\n        for (var j = 0; j < 8; j++) {\n          var square = alpha[j] + row\n\n          html += '<div class=\"{square} ' + CSS[squareColor] + ' ' +\n            'square-' + square + '\" ' +\n            'style=\"width:' + squareSize + 'px;height:' + squareSize + 'px;\" ' +\n            'id=\"' + squareElsIds[square] + '\" ' +\n            'data-square=\"' + square + '\">'\n\n          if (config.showNotation) {\n            // alpha notation\n            if ((orientation === 'white' && row === 1) ||\n                (orientation === 'black' && row === 8)) {\n              html += '<div class=\"{notation} {alpha}\">' + alpha[j] + '</div>'\n            }\n\n            // numeric notation\n            if (j === 0) {\n              html += '<div class=\"{notation} {numeric}\">' + row + '</div>'\n            }\n          }\n\n          html += '</div>' // end .square\n\n          squareColor = (squareColor === 'white') ? 'black' : 'white'\n        }\n        html += '<div class=\"{clearfix}\"></div></div>'\n\n        squareColor = (squareColor === 'white') ? 'black' : 'white'\n\n        if (orientation === 'white') {\n          row = row - 1\n        } else {\n          row = row + 1\n        }\n      }\n\n      return interpolateTemplate(html, CSS)\n    }\n\n    function buildPieceImgSrc (piece) {\n      if (isFunction(config.pieceTheme)) {\n        return config.pieceTheme(piece)\n      }\n\n      if (isString(config.pieceTheme)) {\n        return interpolateTemplate(config.pieceTheme, {piece: piece})\n      }\n\n      // NOTE: this should never happen\n      error(8272, 'Unable to build image source for config.pieceTheme.')\n      return ''\n    }\n\n    function buildPieceHTML (piece, hidden, id) {\n      var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" '\n      if (isString(id) && id !== '') {\n        html += 'id=\"' + id + '\" '\n      }\n      html += 'alt=\"\" ' +\n        'class=\"{piece}\" ' +\n        'data-piece=\"' + piece + '\" ' +\n        'style=\"width:' + squareSize + 'px;' + 'height:' + squareSize + 'px;'\n\n      if (hidden) {\n        html += 'display:none;'\n      }\n\n      html += '\" />'\n\n      return interpolateTemplate(html, CSS)\n    }\n\n    function buildSparePiecesHTML (color) {\n      var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP']\n      if (color === 'black') {\n        pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP']\n      }\n\n      var html = ''\n      for (var i = 0; i < pieces.length; i++) {\n        html += buildPieceHTML(pieces[i], false, sparePiecesElsIds[pieces[i]])\n      }\n\n      return html\n    }\n\n    // -------------------------------------------------------------------------\n    // Animations\n    // -------------------------------------------------------------------------\n\n    function animateSquareToSquare (src, dest, piece, completeFn) {\n      // get information about the source and destination squares\n      var $srcSquare = $('#' + squareElsIds[src])\n      var srcSquarePosition = $srcSquare.offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destSquarePosition = $destSquare.offset()\n\n      // create the animated piece and absolutely position it\n      // over the source square\n      var animatedPieceId = uuid()\n      $('body').append(buildPieceHTML(piece, true, animatedPieceId))\n      var $animatedPiece = $('#' + animatedPieceId)\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        top: srcSquarePosition.top,\n        left: srcSquarePosition.left\n      })\n\n      // remove original piece from source square\n      $srcSquare.find('.' + CSS.piece).remove()\n\n      function onFinishAnimation1 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.append(buildPieceHTML(piece))\n\n        // remove the animated piece\n        $animatedPiece.remove()\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation1\n      }\n      $animatedPiece.animate(destSquarePosition, opts)\n    }\n\n    function animateSparePieceToSquare (piece, dest, completeFn) {\n      var srcOffset = $('#' + sparePiecesElsIds[piece]).offset()\n      var $destSquare = $('#' + squareElsIds[dest])\n      var destOffset = $destSquare.offset()\n\n      // create the animate piece\n      var pieceId = uuid()\n      $('body').append(buildPieceHTML(piece, true, pieceId))\n      var $animatedPiece = $('#' + pieceId)\n      $animatedPiece.css({\n        display: '',\n        position: 'absolute',\n        left: srcOffset.left,\n        top: srcOffset.top\n      })\n\n      // on complete\n      function onFinishAnimation2 () {\n        // add the \"real\" piece to the destination square\n        $destSquare.find('.' + CSS.piece).remove()\n        $destSquare.append(buildPieceHTML(piece))\n\n        // remove the animated piece\n        $animatedPiece.remove()\n\n        // run complete function\n        if (isFunction(completeFn)) {\n          completeFn()\n        }\n      }\n\n      // animate the piece to the destination square\n      var opts = {\n        duration: config.moveSpeed,\n        complete: onFinishAnimation2\n      }\n      $animatedPiece.animate(destOffset, opts)\n    }\n\n    // execute an array of animations\n    function doAnimations (animations, oldPos, newPos) {\n      if (animations.length === 0) return\n\n      var numFinished = 0\n      function onFinishAnimation3 () {\n        // exit if all the animations aren't finished\n        numFinished = numFinished + 1\n        if (numFinished !== animations.length) return\n\n        drawPositionInstant()\n\n        // run their onMoveEnd function\n        if (isFunction(config.onMoveEnd)) {\n          config.onMoveEnd(deepCopy(oldPos), deepCopy(newPos))\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var animation = animations[i]\n\n        // clear a piece\n        if (animation.type === 'clear') {\n          $('#' + squareElsIds[animation.square] + ' .' + CSS.piece)\n            .fadeOut(config.trashSpeed, onFinishAnimation3)\n\n        // add a piece with no spare pieces - fade the piece onto the square\n        } else if (animation.type === 'add' && !config.sparePieces) {\n          $('#' + squareElsIds[animation.square])\n            .append(buildPieceHTML(animation.piece, true))\n            .find('.' + CSS.piece)\n            .fadeIn(config.appearSpeed, onFinishAnimation3)\n\n        // add a piece with spare pieces - animate from the spares\n        } else if (animation.type === 'add' && config.sparePieces) {\n          animateSparePieceToSquare(animation.piece, animation.square, onFinishAnimation3)\n\n        // move a piece from squareA to squareB\n        } else if (animation.type === 'move') {\n          animateSquareToSquare(animation.source, animation.destination, animation.piece, onFinishAnimation3)\n        }\n      }\n    }\n\n    // calculate an array of animations that need to happen in order to get\n    // from pos1 to pos2\n    function calculateAnimations (pos1, pos2) {\n      // make copies of both\n      pos1 = deepCopy(pos1)\n      pos2 = deepCopy(pos2)\n\n      var animations = []\n      var squaresMovedTo = {}\n\n      // remove pieces that are the same in both positions\n      for (var i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        if (pos1.hasOwnProperty(i) && pos1[i] === pos2[i]) {\n          delete pos1[i]\n          delete pos2[i]\n        }\n      }\n\n      // find all the \"move\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        var closestPiece = findClosestPiece(pos1, pos2[i], i)\n        if (closestPiece) {\n          animations.push({\n            type: 'move',\n            source: closestPiece,\n            destination: i,\n            piece: pos2[i]\n          })\n\n          delete pos1[closestPiece]\n          delete pos2[i]\n          squaresMovedTo[i] = true\n        }\n      }\n\n      // \"add\" animations\n      for (i in pos2) {\n        if (!pos2.hasOwnProperty(i)) continue\n\n        animations.push({\n          type: 'add',\n          square: i,\n          piece: pos2[i]\n        })\n\n        delete pos2[i]\n      }\n\n      // \"clear\" animations\n      for (i in pos1) {\n        if (!pos1.hasOwnProperty(i)) continue\n\n        // do not clear a piece if it is on a square that is the result\n        // of a \"move\", ie: a piece capture\n        if (squaresMovedTo.hasOwnProperty(i)) continue\n\n        animations.push({\n          type: 'clear',\n          square: i,\n          piece: pos1[i]\n        })\n\n        delete pos1[i]\n      }\n\n      return animations\n    }\n\n    // -------------------------------------------------------------------------\n    // Control Flow\n    // -------------------------------------------------------------------------\n\n    function drawPositionInstant () {\n      // clear the board\n      $board.find('.' + CSS.piece).remove()\n\n      // add the pieces\n      for (var i in currentPosition) {\n        if (!currentPosition.hasOwnProperty(i)) continue\n\n        $('#' + squareElsIds[i]).append(buildPieceHTML(currentPosition[i]))\n      }\n    }\n\n    function drawBoard () {\n      $board.html(buildBoardHTML(currentOrientation, squareSize, config.showNotation))\n      drawPositionInstant()\n\n      if (config.sparePieces) {\n        if (currentOrientation === 'white') {\n          $sparePiecesTop.html(buildSparePiecesHTML('black'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('white'))\n        } else {\n          $sparePiecesTop.html(buildSparePiecesHTML('white'))\n          $sparePiecesBottom.html(buildSparePiecesHTML('black'))\n        }\n      }\n    }\n\n    function setCurrentPosition (position) {\n      var oldPos = deepCopy(currentPosition)\n      var newPos = deepCopy(position)\n      var oldFen = objToFen(oldPos)\n      var newFen = objToFen(newPos)\n\n      // do nothing if no change in position\n      if (oldFen === newFen) return\n\n      // run their onChange function\n      if (isFunction(config.onChange)) {\n        config.onChange(oldPos, newPos)\n      }\n\n      // update state\n      currentPosition = position\n    }\n\n    function isXYOnSquare (x, y) {\n      for (var i in squareElsOffsets) {\n        if (!squareElsOffsets.hasOwnProperty(i)) continue\n\n        var s = squareElsOffsets[i]\n        if (x >= s.left &&\n            x < s.left + squareSize &&\n            y >= s.top &&\n            y < s.top + squareSize) {\n          return i\n        }\n      }\n\n      return 'offboard'\n    }\n\n    // records the XY coords of every square into memory\n    function captureSquareOffsets () {\n      squareElsOffsets = {}\n\n      for (var i in squareElsIds) {\n        if (!squareElsIds.hasOwnProperty(i)) continue\n\n        squareElsOffsets[i] = $('#' + squareElsIds[i]).offset()\n      }\n    }\n\n    function removeSquareHighlights () {\n      $board\n        .find('.' + CSS.square)\n        .removeClass(CSS.highlight1 + ' ' + CSS.highlight2)\n    }\n\n    function snapbackDraggedPiece () {\n      // there is no \"snapback\" for spare pieces\n      if (draggedPieceSource === 'spare') {\n        trashDraggedPiece()\n        return\n      }\n\n      removeSquareHighlights()\n\n      // animation complete\n      function complete () {\n        drawPositionInstant()\n        $draggedPiece.css('display', 'none')\n\n        // run their onSnapbackEnd function\n        if (isFunction(config.onSnapbackEnd)) {\n          config.onSnapbackEnd(\n            draggedPiece,\n            draggedPieceSource,\n            deepCopy(currentPosition),\n            currentOrientation\n          )\n        }\n      }\n\n      // get source square position\n      var sourceSquarePosition = $('#' + squareElsIds[draggedPieceSource]).offset()\n\n      // animate the piece to the target square\n      var opts = {\n        duration: config.snapbackSpeed,\n        complete: complete\n      }\n      $draggedPiece.animate(sourceSquarePosition, opts)\n\n      // set state\n      isDragging = false\n    }\n\n    function trashDraggedPiece () {\n      removeSquareHighlights()\n\n      // remove the source piece\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      setCurrentPosition(newPosition)\n\n      // redraw the position\n      drawPositionInstant()\n\n      // hide the dragged piece\n      $draggedPiece.fadeOut(config.trashSpeed)\n\n      // set state\n      isDragging = false\n    }\n\n    function dropDraggedPieceOnSquare (square) {\n      removeSquareHighlights()\n\n      // update position\n      var newPosition = deepCopy(currentPosition)\n      delete newPosition[draggedPieceSource]\n      newPosition[square] = draggedPiece\n      setCurrentPosition(newPosition)\n\n      // get target square information\n      var targetSquarePosition = $('#' + squareElsIds[square]).offset()\n\n      // animation complete\n      function onAnimationComplete () {\n        drawPositionInstant()\n        $draggedPiece.css('display', 'none')\n\n        // execute their onSnapEnd function\n        if (isFunction(config.onSnapEnd)) {\n          config.onSnapEnd(draggedPieceSource, square, draggedPiece)\n        }\n      }\n\n      // snap the piece to the target square\n      var opts = {\n        duration: config.snapSpeed,\n        complete: onAnimationComplete\n      }\n      $draggedPiece.animate(targetSquarePosition, opts)\n\n      // set state\n      isDragging = false\n    }\n\n    function beginDraggingPiece (source, piece, x, y) {\n      // run their custom onDragStart function\n      // their custom onDragStart function can cancel drag start\n      if (isFunction(config.onDragStart) &&\n          config.onDragStart(source, piece, deepCopy(currentPosition), currentOrientation) === false) {\n        return\n      }\n\n      // set state\n      isDragging = true\n      draggedPiece = piece\n      draggedPieceSource = source\n\n      // if the piece came from spare pieces, location is offboard\n      if (source === 'spare') {\n        draggedPieceLocation = 'offboard'\n      } else {\n        draggedPieceLocation = source\n      }\n\n      // capture the x, y coords of all squares in memory\n      captureSquareOffsets()\n\n      // create the dragged piece\n      $draggedPiece.attr('src', buildPieceImgSrc(piece)).css({\n        display: '',\n        position: 'absolute',\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\n\n      if (source !== 'spare') {\n        // highlight the source square and hide the piece\n        $('#' + squareElsIds[source])\n          .addClass(CSS.highlight1)\n          .find('.' + CSS.piece)\n          .css('display', 'none')\n      }\n    }\n\n    function updateDraggedPiece (x, y) {\n      // put the dragged piece over the mouse cursor\n      $draggedPiece.css({\n        left: x - squareSize / 2,\n        top: y - squareSize / 2\n      })\n\n      // get location\n      var location = isXYOnSquare(x, y)\n\n      // do nothing if the location has not changed\n      if (location === draggedPieceLocation) return\n\n      // remove highlight from previous square\n      if (validSquare(draggedPieceLocation)) {\n        $('#' + squareElsIds[draggedPieceLocation]).removeClass(CSS.highlight2)\n      }\n\n      // add highlight to new square\n      if (validSquare(location)) {\n        $('#' + squareElsIds[location]).addClass(CSS.highlight2)\n      }\n\n      // run onDragMove\n      if (isFunction(config.onDragMove)) {\n        config.onDragMove(\n          location,\n          draggedPieceLocation,\n          draggedPieceSource,\n          draggedPiece,\n          deepCopy(currentPosition),\n          currentOrientation\n        )\n      }\n\n      // update state\n      draggedPieceLocation = location\n    }\n\n    function stopDraggedPiece (location) {\n      // determine what the action should be\n      var action = 'drop'\n      if (location === 'offboard' && config.dropOffBoard === 'snapback') {\n        action = 'snapback'\n      }\n      if (location === 'offboard' && config.dropOffBoard === 'trash') {\n        action = 'trash'\n      }\n\n      // run their onDrop function, which can potentially change the drop action\n      if (isFunction(config.onDrop)) {\n        var newPosition = deepCopy(currentPosition)\n\n        // source piece is a spare piece and position is off the board\n        // if (draggedPieceSource === 'spare' && location === 'offboard') {...}\n        // position has not changed; do nothing\n\n        // source piece is a spare piece and position is on the board\n        if (draggedPieceSource === 'spare' && validSquare(location)) {\n          // add the piece to the board\n          newPosition[location] = draggedPiece\n        }\n\n        // source piece was on the board and position is off the board\n        if (validSquare(draggedPieceSource) && location === 'offboard') {\n          // remove the piece from the board\n          delete newPosition[draggedPieceSource]\n        }\n\n        // source piece was on the board and position is on the board\n        if (validSquare(draggedPieceSource) && validSquare(location)) {\n          // move the piece\n          delete newPosition[draggedPieceSource]\n          newPosition[location] = draggedPiece\n        }\n\n        var oldPosition = deepCopy(currentPosition)\n\n        var result = config.onDrop(\n          draggedPieceSource,\n          location,\n          draggedPiece,\n          newPosition,\n          oldPosition,\n          currentOrientation\n        )\n        if (result === 'snapback' || result === 'trash') {\n          action = result\n        }\n      }\n\n      // do it!\n      if (action === 'snapback') {\n        snapbackDraggedPiece()\n      } else if (action === 'trash') {\n        trashDraggedPiece()\n      } else if (action === 'drop') {\n        dropDraggedPieceOnSquare(location)\n      }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    // clear the board\n    widget.clear = function (useAnimation) {\n      widget.position({}, useAnimation)\n    }\n\n    // remove the widget from the page\n    widget.destroy = function () {\n      // remove markup\n      $container.html('')\n      $draggedPiece.remove()\n\n      // remove event handlers\n      $container.unbind()\n    }\n\n    // shorthand method to get the current FEN\n    widget.fen = function () {\n      return widget.position('fen')\n    }\n\n    // flip orientation\n    widget.flip = function () {\n      return widget.orientation('flip')\n    }\n\n    // move pieces\n    // TODO: this method should be variadic as well as accept an array of moves\n    widget.move = function () {\n      // no need to throw an error here; just do nothing\n      // TODO: this should return the current position\n      if (arguments.length === 0) return\n\n      var useAnimation = true\n\n      // collect the moves into an object\n      var moves = {}\n      for (var i = 0; i < arguments.length; i++) {\n        // any \"false\" to this function means no animations\n        if (arguments[i] === false) {\n          useAnimation = false\n          continue\n        }\n\n        // skip invalid arguments\n        if (!validMove(arguments[i])) {\n          error(2826, 'Invalid move passed to the move method.', arguments[i])\n          continue\n        }\n\n        var tmp = arguments[i].split('-')\n        moves[tmp[0]] = tmp[1]\n      }\n\n      // calculate position from moves\n      var newPos = calculatePositionFromMoves(currentPosition, moves)\n\n      // update the board\n      widget.position(newPos, useAnimation)\n\n      // return the new position object\n      return newPos\n    }\n\n    widget.orientation = function (arg) {\n      // no arguments, return the current orientation\n      if (arguments.length === 0) {\n        return currentOrientation\n      }\n\n      // set to white or black\n      if (arg === 'white' || arg === 'black') {\n        currentOrientation = arg\n        drawBoard()\n        return currentOrientation\n      }\n\n      // flip orientation\n      if (arg === 'flip') {\n        currentOrientation = currentOrientation === 'white' ? 'black' : 'white'\n        drawBoard()\n        return currentOrientation\n      }\n\n      error(5482, 'Invalid value passed to the orientation method.', arg)\n    }\n\n    widget.position = function (position, useAnimation) {\n      // no arguments, return the current position\n      if (arguments.length === 0) {\n        return deepCopy(currentPosition)\n      }\n\n      // get position as FEN\n      if (isString(position) && position.toLowerCase() === 'fen') {\n        return objToFen(currentPosition)\n      }\n\n      // start position\n      if (isString(position) && position.toLowerCase() === 'start') {\n        position = deepCopy(START_POSITION)\n      }\n\n      // convert FEN to position object\n      if (validFen(position)) {\n        position = fenToObj(position)\n      }\n\n      // validate position object\n      if (!validPositionObject(position)) {\n        error(6482, 'Invalid value passed to the position method.', position)\n        return\n      }\n\n      // default for useAnimations is true\n      if (useAnimation !== false) useAnimation = true\n\n      if (useAnimation) {\n        // start the animations\n        var animations = calculateAnimations(currentPosition, position)\n        doAnimations(animations, currentPosition, position)\n\n        // set the new position\n        setCurrentPosition(position)\n      } else {\n        // instant update\n        setCurrentPosition(position)\n        drawPositionInstant()\n      }\n    }\n\n    widget.resize = function () {\n      // calulate the new square size\n      squareSize = calculateSquareSize()\n\n      // set board width\n      $board.css('width', squareSize * 8 + 'px')\n\n      // set drag piece size\n      $draggedPiece.css({\n        height: squareSize,\n        width: squareSize\n      })\n\n      // spare pieces\n      if (config.sparePieces) {\n        $container\n          .find('.' + CSS.sparePieces)\n          .css('paddingLeft', squareSize + boardBorderSize + 'px')\n      }\n\n      // redraw the board\n      drawBoard()\n    }\n\n    // set the starting position\n    widget.start = function (useAnimation) {\n      widget.position('start', useAnimation)\n    }\n\n    // -------------------------------------------------------------------------\n    // Browser Events\n    // -------------------------------------------------------------------------\n\n    function stopDefault (evt) {\n      evt.preventDefault()\n    }\n\n    function mousedownSquare (evt) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\n      beginDraggingPiece(square, currentPosition[square], evt.pageX, evt.pageY)\n    }\n\n    function touchstartSquare (e) {\n      // do nothing if we're not draggable\n      if (!config.draggable) return\n\n      // do nothing if there is no piece on this square\n      var square = $(this).attr('data-square')\n      if (!validSquare(square)) return\n      if (!currentPosition.hasOwnProperty(square)) return\n\n      e = e.originalEvent\n      beginDraggingPiece(\n        square,\n        currentPosition[square],\n        e.changedTouches[0].pageX,\n        e.changedTouches[0].pageY\n      )\n    }\n\n    function mousedownSparePiece (evt) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\n      var piece = $(this).attr('data-piece')\n\n      beginDraggingPiece('spare', piece, evt.pageX, evt.pageY)\n    }\n\n    function touchstartSparePiece (e) {\n      // do nothing if sparePieces is not enabled\n      if (!config.sparePieces) return\n\n      var piece = $(this).attr('data-piece')\n\n      e = e.originalEvent\n      beginDraggingPiece(\n        'spare',\n        piece,\n        e.changedTouches[0].pageX,\n        e.changedTouches[0].pageY\n      )\n    }\n\n    function mousemoveWindow (evt) {\n      if (isDragging) {\n        updateDraggedPiece(evt.pageX, evt.pageY)\n      }\n    }\n\n    var throttledMousemoveWindow = throttle(mousemoveWindow, config.dragThrottleRate)\n\n    function touchmoveWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // prevent screen from scrolling\n      evt.preventDefault()\n\n      updateDraggedPiece(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n    }\n\n    var throttledTouchmoveWindow = throttle(touchmoveWindow, config.dragThrottleRate)\n\n    function mouseupWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // get the location\n      var location = isXYOnSquare(evt.pageX, evt.pageY)\n\n      stopDraggedPiece(location)\n    }\n\n    function touchendWindow (evt) {\n      // do nothing if we are not dragging a piece\n      if (!isDragging) return\n\n      // get the location\n      var location = isXYOnSquare(evt.originalEvent.changedTouches[0].pageX,\n        evt.originalEvent.changedTouches[0].pageY)\n\n      stopDraggedPiece(location)\n    }\n\n    function mouseenterSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide a onMouseoverSquare function\n      if (!isFunction(config.onMouseoverSquare)) return\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\n      // get the piece on this square\n      var piece = false\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\n\n      // execute their function\n      config.onMouseoverSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\n\n    function mouseleaveSquare (evt) {\n      // do not fire this event if we are dragging a piece\n      // NOTE: this should never happen, but it's a safeguard\n      if (isDragging) return\n\n      // exit if they did not provide an onMouseoutSquare function\n      if (!isFunction(config.onMouseoutSquare)) return\n\n      // get the square\n      var square = $(evt.currentTarget).attr('data-square')\n\n      // NOTE: this should never happen; defensive\n      if (!validSquare(square)) return\n\n      // get the piece on this square\n      var piece = false\n      if (currentPosition.hasOwnProperty(square)) {\n        piece = currentPosition[square]\n      }\n\n      // execute their function\n      config.onMouseoutSquare(square, piece, deepCopy(currentPosition), currentOrientation)\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    function addEvents () {\n      // prevent \"image drag\"\n      $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault)\n\n      // mouse drag pieces\n      $board.on('mousedown', '.' + CSS.square, mousedownSquare)\n      $container.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece, mousedownSparePiece)\n\n      // mouse enter / leave square\n      $board\n        .on('mouseenter', '.' + CSS.square, mouseenterSquare)\n        .on('mouseleave', '.' + CSS.square, mouseleaveSquare)\n\n      // piece drag\n      var $window = $(window)\n      $window\n        .on('mousemove', throttledMousemoveWindow)\n        .on('mouseup', mouseupWindow)\n\n      // touch drag pieces\n      if (isTouchDevice()) {\n        $board.on('touchstart', '.' + CSS.square, touchstartSquare)\n        $container.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece, touchstartSparePiece)\n        $window\n          .on('touchmove', throttledTouchmoveWindow)\n          .on('touchend', touchendWindow)\n      }\n    }\n\n    function initDOM () {\n      // create unique IDs for all the elements we will create\n      createElIds()\n\n      // build board and save it in memory\n      $container.html(buildContainerHTML(config.sparePieces))\n      $board = $container.find('.' + CSS.board)\n\n      if (config.sparePieces) {\n        $sparePiecesTop = $container.find('.' + CSS.sparePiecesTop)\n        $sparePiecesBottom = $container.find('.' + CSS.sparePiecesBottom)\n      }\n\n      // create the drag piece\n      var draggedPieceId = uuid()\n      $('body').append(buildPieceHTML('wP', true, draggedPieceId))\n      $draggedPiece = $('#' + draggedPieceId)\n\n      // TODO: need to remove this dragged piece element if the board is no\n      // longer in the DOM\n\n      // get the border size\n      boardBorderSize = parseInt($board.css('borderLeftWidth'), 10)\n\n      // set the size and draw the board\n      widget.resize()\n    }\n\n    // -------------------------------------------------------------------------\n    // Initialization\n    // -------------------------------------------------------------------------\n\n    setInitialState()\n    initDOM()\n    addEvents()\n\n    // return the widget object\n    return widget\n  } // end constructor\n\n  // TODO: do module exports here\n  window['Chessboard'] = constructor\n\n  // support legacy ChessBoard name\n  window['ChessBoard'] = window['Chessboard']\n\n  // expose util functions\n  window['Chessboard']['fenToObj'] = fenToObj\n  window['Chessboard']['objToFen'] = objToFen\n})() // end anonymous wrapper\n\n/* export Chessboard object if using node or any other CommonJS compatible\n * environment */\n\nconsole.log(232)\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}