{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_vm._v(\" Начальная Позиция \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.startingFen,\n      expression: \"startingFen\"\n    }],\n    domProps: {\n      value: _vm.startingFen\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.startingFen = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\"), _vm._v(\" Максимальная глубина \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.maxDepth,\n      expression: \"maxDepth\"\n    }],\n    domProps: {\n      value: _vm.maxDepth\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.maxDepth = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\"), _vm._v(\" Максимальная оценка белых \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.maxCpWhite,\n      expression: \"maxCpWhite\"\n    }],\n    domProps: {\n      value: _vm.maxCpWhite\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.maxCpWhite = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\"), _vm._v(\" Максимальная оценка черных \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.maxCpBlack,\n      expression: \"maxCpBlack\"\n    }],\n    domProps: {\n      value: _vm.maxCpBlack\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.maxCpBlack = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\"), _vm._v(\" Минимальная частота хода \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.minAppearancePercent,\n      expression: \"minAppearancePercent\"\n    }],\n    domProps: {\n      value: _vm.minAppearancePercent\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.minAppearancePercent = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\"), _vm._v(\" Минимальная общая частота \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.minAppearancePercentTotal,\n      expression: \"minAppearancePercentTotal\"\n    }],\n    domProps: {\n      value: _vm.minAppearancePercentTotal\n    },\n    on: {\n      input: function ($event) {\n        if ($event.target.composing) return;\n        _vm.minAppearancePercentTotal = $event.target.value;\n      }\n    }\n  }), _vm._v(\" \"), _c(\"br\")]);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","_v","directives","name","rawName","value","startingFen","expression","domProps","on","input","$event","target","composing","maxDepth","maxCpWhite","maxCpBlack","minAppearancePercent","minAppearancePercentTotal","staticRenderFns","_withStripped"],"sources":["/Users/Ila/PycharmProjects/ChessVue/chess-vue/src/components/Settings.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _vm._v(\" Начальная Позиция \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.startingFen,\n          expression: \"startingFen\",\n        },\n      ],\n      domProps: { value: _vm.startingFen },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.startingFen = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" Максимальная глубина \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.maxDepth,\n          expression: \"maxDepth\",\n        },\n      ],\n      domProps: { value: _vm.maxDepth },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.maxDepth = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" Максимальная оценка белых \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.maxCpWhite,\n          expression: \"maxCpWhite\",\n        },\n      ],\n      domProps: { value: _vm.maxCpWhite },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.maxCpWhite = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" Максимальная оценка черных \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.maxCpBlack,\n          expression: \"maxCpBlack\",\n        },\n      ],\n      domProps: { value: _vm.maxCpBlack },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.maxCpBlack = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" Минимальная частота хода \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.minAppearancePercent,\n          expression: \"minAppearancePercent\",\n        },\n      ],\n      domProps: { value: _vm.minAppearancePercent },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.minAppearancePercent = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n    _vm._v(\" Минимальная общая частота \"),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.minAppearancePercentTotal,\n          expression: \"minAppearancePercentTotal\",\n        },\n      ],\n      domProps: { value: _vm.minAppearancePercentTotal },\n      on: {\n        input: function ($event) {\n          if ($event.target.composing) return\n          _vm.minAppearancePercentTotal = $event.target.value\n        },\n      },\n    }),\n    _vm._v(\" \"),\n    _c(\"br\"),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}