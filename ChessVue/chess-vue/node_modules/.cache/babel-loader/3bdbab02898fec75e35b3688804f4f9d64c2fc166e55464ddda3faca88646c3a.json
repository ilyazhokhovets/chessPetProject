{"ast":null,"code":"export default {\n  name: \"Settings\",\n  created() {\n    this.emitEventChanged();\n  },\n  data() {\n    return {\n      settings: {\n        startingFen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n        maxDepth: '7',\n        maxCpWhite: '150',\n        maxCpBlack: '-100',\n        minAppearancePercent: '0.05',\n        minAppearancePercentTotal: '10000'\n      }\n    };\n  },\n  watch: {\n    settings() {\n      console.log('w');\n      this.emitEventChanged();\n    }\n  },\n  methods: {\n    setStartingFen() {\n      this.settings.startingFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n    },\n    setStartingFenDefault() {\n      console.log('ok');\n      this.settings.startingFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n      // this.emitEventChanged()\n      this.boom();\n    },\n    async deldb() {\n      let data = {};\n      this.listMove = await fetch(`${this.$store.getters.getServerUrl}/move/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => response.json());\n      console.log('done');\n    },\n    boom() {\n      console.log(this.settings);\n    },\n    emitEventChanged() {\n      console.log('e');\n      let settings = {\n        startingFen: this.startingFen,\n        maxDepth: this.maxDepth,\n        maxCpWhite: this.maxCpWhite,\n        maxCpBlack: this.maxCpBlack,\n        minAppearancePercent: this.minAppearancePercent,\n        minAppearancePercentTotal: this.minAppearancePercentTotal\n      };\n      this.$store.commit('setSittings', this.settings);\n    }\n  }\n};","map":{"version":3,"mappings":"AAqBA;EACAA;EACAC;IACA;EACA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MAAA;IACA;EACA;EACAC;IACAP;MACAQ;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACAH;MACA;MACA;MACA;IACA;IACA;MACA,YAEA;MAEA,4BACA,6CACA;QACAI;QACAC;UACA;QACA;QACAC;MAAA,EACA;MACAN;IAEA;IACAO;MACAP;IACA;IACAQ;MACAR;MACA;QACAP;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACA;IACA;EACA;AACA","names":["name","created","data","settings","startingFen","maxDepth","maxCpWhite","maxCpBlack","minAppearancePercent","minAppearancePercentTotal","watch","console","methods","setStartingFen","setStartingFenDefault","method","headers","body","boom","emitEventChanged"],"sourceRoot":"src/components","sources":["Settings.vue"],"sourcesContent":["<template>\n<div class=\"relative\">\n Начальная Позиция\n  <input v-model=\"settings.startingFen\" class=\"feninput\" />\n  <button  @click=\"setStartingFenDefault\">default</button> <br>\n<!--  <button @click=\"ыу\">Сделать текущую позицию начальной</button>-->\n  Максимальная глубина\n  <input v-model=\"settings.maxDepth\" class=\"digitinput\" > <br>\n  Максимальная оценка белых\n  <input v-model=\"settings.maxCpWhite\" class=\"digitinput\"> <br>\n  Максимальная оценка черных\n  <input v-model=\"settings.maxCpBlack\" class=\"digitinput\"> <br>\n  Минимальная частота хода\n  <input v-model=\"settings.minAppearancePercent\" class=\"digitinput\">  <br>\n  Минимальная общая частота\n  <input v-model=\"settings.minAppearancePercentTotal\" class=\"digitinput\"> <br>\n  <button @click=\"deldb\">delete db</button>\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"Settings\",\n  created() {\n    this.emitEventChanged()\n  },\n  data() {\n    return {\n      settings: {\n      startingFen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      maxDepth: '7',\n      maxCpWhite: '150',\n      maxCpBlack: '-100',\n      minAppearancePercent: '0.05',\n      minAppearancePercentTotal: '10000'}\n    }\n  },\n  watch: {\n    settings() {\n      console.log('w')\n      this.emitEventChanged()\n    }\n  },\n  methods: {\n    setStartingFen(){\n      this.settings.startingFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n    },\n    setStartingFenDefault() {\n      console.log('ok')\n      this.settings.startingFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'\n      // this.emitEventChanged()\n      this.boom()\n    },\n    async deldb(){\n      let data = {\n\n      }\n\n      this.listMove = await fetch(\n          `${this.$store.getters.getServerUrl}/move/`,\n          {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)}\n      ).then(response => response.json())\n    console.log('done')\n\n    },\n    boom (){\n      console.log(this.settings)\n    },\n            emitEventChanged () {\n      console.log('e')\n              let settings = {\n                 startingFen: this.startingFen,\n                  maxDepth: this.maxDepth,\n                  maxCpWhite: this.maxCpWhite,\n                  maxCpBlack: this.maxCpBlack,\n                  minAppearancePercent: this.minAppearancePercent,\n                  minAppearancePercentTotal: this.minAppearancePercentTotal\n              }\n                this.$store.commit('setSittings', this.settings)\n            }\n        }\n}\n\n</script>\n\n<style scoped>\ndiv.relative {\n  position: absolute;\n  top: 80px;\n  left: 500px;\n  font-size: 18px;\n}\n.feninput {\n  width: 400px;\n}\n.digitinput{\n  width: 50px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}